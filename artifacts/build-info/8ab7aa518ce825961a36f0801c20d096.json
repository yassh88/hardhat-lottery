{"id":"8ab7aa518ce825961a36f0801c20d096","_format":"hh-sol-build-info-1","solcVersion":"0.8.17","solcLongVersion":"0.8.17+commit.8df45f5f","input":{"language":"Solidity","sources":{"contracts/Raffle.sol":{"content":"// SPDX-License-Identifier: SEE LICENSE IN LICENSE\npragma solidity ^0.8.7;\nimport \"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol\";\nimport \"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol\";\n\nerror Raffle__SendMoreToEnterRaffle();\nerror Raffle__TransferFailed();\n\ncontract Raffle is VRFConsumerBaseV2 {\n  /* Type declarations */\n  enum RaffleState {\n    OPEN,\n    CALCULATING\n  }\n\n  // Lottery Variables\n  uint64 private immutable i_subscriptionId;\n  bytes32 private immutable i_gasLane;\n  uint32 private immutable i_callbackGasLimit;\n  uint16 private constant REQUEST_CONFIRMATIONS = 3;\n  uint32 private constant NUM_WORDS = 1;\n\n  // Lottery Variables\n  uint256 private immutable i_interval;\n  uint256 private immutable i_entranceFee;\n  uint256 private s_lastTimeStamp;\n  address private s_recentWinner;\n  address payable[] private s_players;\n  RaffleState private s_raffleState;\n  VRFCoordinatorV2Interface private immutable i_vrfCoordinator;\n\n  event RequestedRaffleWinner(uint256 indexed requestId);\n  event RaffleEnter(address indexed player);\n  event RequestSent(uint256 requestId, uint32 numWords);\n  event WinnerPicked(address indexed requestId);\n  event RequestFulfilled(uint256 requestId, uint256[] randomWords);\n\n  constructor(\n    address vrfCoordinatorV2,\n    uint64 subscriptionId,\n    bytes32 gasLane, // keyHash\n    uint256 interval,\n    uint256 entranceFee,\n    uint32 callbackGasLimit\n  ) VRFConsumerBaseV2(vrfCoordinatorV2) {\n    i_vrfCoordinator = VRFCoordinatorV2Interface(vrfCoordinatorV2);\n    i_gasLane = gasLane;\n    i_interval = interval;\n    i_subscriptionId = subscriptionId;\n    i_entranceFee = entranceFee;\n    s_raffleState = RaffleState.OPEN;\n    s_lastTimeStamp = block.timestamp;\n    i_callbackGasLimit = callbackGasLimit;\n  }\n\n  function enterRaffle() public payable {\n    if (msg.value < i_entranceFee) {\n      revert Raffle__SendMoreToEnterRaffle();\n    } else {\n      s_players.push(payable(msg.sender));\n      emit RaffleEnter(msg.sender);\n    }\n  }\n\n  function requestRandomWords() external {\n    // Will revert if subscription is not set and funded.\n    uint256 requestId = i_vrfCoordinator.requestRandomWords(\n      i_gasLane,\n      i_subscriptionId,\n      REQUEST_CONFIRMATIONS,\n      i_callbackGasLimit,\n      NUM_WORDS\n    );\n    emit RequestedRaffleWinner(requestId);\n  }\n\n  function fulfillRandomWords(\n    uint256, /* requestId */\n    uint256[] memory randomWords\n  ) internal override {\n    uint256 indexOfWinner = randomWords[0] % s_players.length;\n    address payable recentWinner = s_players[indexOfWinner];\n    s_recentWinner = recentWinner;\n    s_players = new address payable[](0);\n    s_raffleState = RaffleState.OPEN;\n    s_lastTimeStamp = block.timestamp;\n    (bool success, ) = recentWinner.call{value: address(this).balance}(\"\");\n    // require(success, \"Transfer failed\");\n    if (!success) {\n      revert Raffle__TransferFailed();\n    }\n    emit WinnerPicked(recentWinner);\n  }\n\n  function getPlayer(uint256 index) public view returns (address) {\n    return s_players[index];\n  }\n\n  function getRecentWinner() public view returns (address) {\n    return s_recentWinner;\n  }\n}\n"},"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.4;\n\n/** ****************************************************************************\n * @notice Interface for contracts using VRF randomness\n * *****************************************************************************\n * @dev PURPOSE\n *\n * @dev Reggie the Random Oracle (not his real job) wants to provide randomness\n * @dev to Vera the verifier in such a way that Vera can be sure he's not\n * @dev making his output up to suit himself. Reggie provides Vera a public key\n * @dev to which he knows the secret key. Each time Vera provides a seed to\n * @dev Reggie, he gives back a value which is computed completely\n * @dev deterministically from the seed and the secret key.\n *\n * @dev Reggie provides a proof by which Vera can verify that the output was\n * @dev correctly computed once Reggie tells it to her, but without that proof,\n * @dev the output is indistinguishable to her from a uniform random sample\n * @dev from the output space.\n *\n * @dev The purpose of this contract is to make it easy for unrelated contracts\n * @dev to talk to Vera the verifier about the work Reggie is doing, to provide\n * @dev simple access to a verifiable source of randomness. It ensures 2 things:\n * @dev 1. The fulfillment came from the VRFCoordinator\n * @dev 2. The consumer contract implements fulfillRandomWords.\n * *****************************************************************************\n * @dev USAGE\n *\n * @dev Calling contracts must inherit from VRFConsumerBase, and can\n * @dev initialize VRFConsumerBase's attributes in their constructor as\n * @dev shown:\n *\n * @dev   contract VRFConsumer {\n * @dev     constructor(<other arguments>, address _vrfCoordinator, address _link)\n * @dev       VRFConsumerBase(_vrfCoordinator) public {\n * @dev         <initialization with other arguments goes here>\n * @dev       }\n * @dev   }\n *\n * @dev The oracle will have given you an ID for the VRF keypair they have\n * @dev committed to (let's call it keyHash). Create subscription, fund it\n * @dev and your consumer contract as a consumer of it (see VRFCoordinatorInterface\n * @dev subscription management functions).\n * @dev Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,\n * @dev callbackGasLimit, numWords),\n * @dev see (VRFCoordinatorInterface for a description of the arguments).\n *\n * @dev Once the VRFCoordinator has received and validated the oracle's response\n * @dev to your request, it will call your contract's fulfillRandomWords method.\n *\n * @dev The randomness argument to fulfillRandomWords is a set of random words\n * @dev generated from your requestId and the blockHash of the request.\n *\n * @dev If your contract could have concurrent requests open, you can use the\n * @dev requestId returned from requestRandomWords to track which response is associated\n * @dev with which randomness request.\n * @dev See \"SECURITY CONSIDERATIONS\" for principles to keep in mind,\n * @dev if your contract could have multiple requests in flight simultaneously.\n *\n * @dev Colliding `requestId`s are cryptographically impossible as long as seeds\n * @dev differ.\n *\n * *****************************************************************************\n * @dev SECURITY CONSIDERATIONS\n *\n * @dev A method with the ability to call your fulfillRandomness method directly\n * @dev could spoof a VRF response with any random value, so it's critical that\n * @dev it cannot be directly called by anything other than this base contract\n * @dev (specifically, by the VRFConsumerBase.rawFulfillRandomness method).\n *\n * @dev For your users to trust that your contract's random behavior is free\n * @dev from malicious interference, it's best if you can write it so that all\n * @dev behaviors implied by a VRF response are executed *during* your\n * @dev fulfillRandomness method. If your contract must store the response (or\n * @dev anything derived from it) and use it later, you must ensure that any\n * @dev user-significant behavior which depends on that stored value cannot be\n * @dev manipulated by a subsequent VRF request.\n *\n * @dev Similarly, both miners and the VRF oracle itself have some influence\n * @dev over the order in which VRF responses appear on the blockchain, so if\n * @dev your contract could have multiple VRF requests in flight simultaneously,\n * @dev you must ensure that the order in which the VRF responses arrive cannot\n * @dev be used to manipulate your contract's user-significant behavior.\n *\n * @dev Since the block hash of the block which contains the requestRandomness\n * @dev call is mixed into the input to the VRF *last*, a sufficiently powerful\n * @dev miner could, in principle, fork the blockchain to evict the block\n * @dev containing the request, forcing the request to be included in a\n * @dev different block with a different hash, and therefore a different input\n * @dev to the VRF. However, such an attack would incur a substantial economic\n * @dev cost. This cost scales with the number of blocks the VRF oracle waits\n * @dev until it calls responds to a request. It is for this reason that\n * @dev that you can signal to an oracle you'd like them to wait longer before\n * @dev responding to the request (however this is not enforced in the contract\n * @dev and so remains effective only in the case of unmodified oracle software).\n */\nabstract contract VRFConsumerBaseV2 {\n  error OnlyCoordinatorCanFulfill(address have, address want);\n  address private immutable vrfCoordinator;\n\n  /**\n   * @param _vrfCoordinator address of VRFCoordinator contract\n   */\n  constructor(address _vrfCoordinator) {\n    vrfCoordinator = _vrfCoordinator;\n  }\n\n  /**\n   * @notice fulfillRandomness handles the VRF response. Your contract must\n   * @notice implement it. See \"SECURITY CONSIDERATIONS\" above for important\n   * @notice principles to keep in mind when implementing your fulfillRandomness\n   * @notice method.\n   *\n   * @dev VRFConsumerBaseV2 expects its subcontracts to have a method with this\n   * @dev signature, and will call it once it has verified the proof\n   * @dev associated with the randomness. (It is triggered via a call to\n   * @dev rawFulfillRandomness, below.)\n   *\n   * @param requestId The Id initially returned by requestRandomness\n   * @param randomWords the VRF output expanded to the requested number of words\n   */\n  function fulfillRandomWords(uint256 requestId, uint256[] memory randomWords) internal virtual;\n\n  // rawFulfillRandomness is called by VRFCoordinator when it receives a valid VRF\n  // proof. rawFulfillRandomness then calls fulfillRandomness, after validating\n  // the origin of the call\n  function rawFulfillRandomWords(uint256 requestId, uint256[] memory randomWords) external {\n    if (msg.sender != vrfCoordinator) {\n      revert OnlyCoordinatorCanFulfill(msg.sender, vrfCoordinator);\n    }\n    fulfillRandomWords(requestId, randomWords);\n  }\n}\n"},"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface VRFCoordinatorV2Interface {\n  /**\n   * @notice Get configuration relevant for making requests\n   * @return minimumRequestConfirmations global min for request confirmations\n   * @return maxGasLimit global max for request gas limit\n   * @return s_provingKeyHashes list of registered key hashes\n   */\n  function getRequestConfig()\n    external\n    view\n    returns (\n      uint16,\n      uint32,\n      bytes32[] memory\n    );\n\n  /**\n   * @notice Request a set of random words.\n   * @param keyHash - Corresponds to a particular oracle job which uses\n   * that key for generating the VRF proof. Different keyHash's have different gas price\n   * ceilings, so you can select a specific one to bound your maximum per request cost.\n   * @param subId  - The ID of the VRF subscription. Must be funded\n   * with the minimum subscription balance required for the selected keyHash.\n   * @param minimumRequestConfirmations - How many blocks you'd like the\n   * oracle to wait before responding to the request. See SECURITY CONSIDERATIONS\n   * for why you may want to request more. The acceptable range is\n   * [minimumRequestBlockConfirmations, 200].\n   * @param callbackGasLimit - How much gas you'd like to receive in your\n   * fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords\n   * may be slightly less than this amount because of gas used calling the function\n   * (argument decoding etc.), so you may need to request slightly more than you expect\n   * to have inside fulfillRandomWords. The acceptable range is\n   * [0, maxGasLimit]\n   * @param numWords - The number of uint256 random values you'd like to receive\n   * in your fulfillRandomWords callback. Note these numbers are expanded in a\n   * secure way by the VRFCoordinator from a single random value supplied by the oracle.\n   * @return requestId - A unique identifier of the request. Can be used to match\n   * a request to a response in fulfillRandomWords.\n   */\n  function requestRandomWords(\n    bytes32 keyHash,\n    uint64 subId,\n    uint16 minimumRequestConfirmations,\n    uint32 callbackGasLimit,\n    uint32 numWords\n  ) external returns (uint256 requestId);\n\n  /**\n   * @notice Create a VRF subscription.\n   * @return subId - A unique subscription id.\n   * @dev You can manage the consumer set dynamically with addConsumer/removeConsumer.\n   * @dev Note to fund the subscription, use transferAndCall. For example\n   * @dev  LINKTOKEN.transferAndCall(\n   * @dev    address(COORDINATOR),\n   * @dev    amount,\n   * @dev    abi.encode(subId));\n   */\n  function createSubscription() external returns (uint64 subId);\n\n  /**\n   * @notice Get a VRF subscription.\n   * @param subId - ID of the subscription\n   * @return balance - LINK balance of the subscription in juels.\n   * @return reqCount - number of requests for this subscription, determines fee tier.\n   * @return owner - owner of the subscription.\n   * @return consumers - list of consumer address which are able to use this subscription.\n   */\n  function getSubscription(uint64 subId)\n    external\n    view\n    returns (\n      uint96 balance,\n      uint64 reqCount,\n      address owner,\n      address[] memory consumers\n    );\n\n  /**\n   * @notice Request subscription owner transfer.\n   * @param subId - ID of the subscription\n   * @param newOwner - proposed new owner of the subscription\n   */\n  function requestSubscriptionOwnerTransfer(uint64 subId, address newOwner) external;\n\n  /**\n   * @notice Request subscription owner transfer.\n   * @param subId - ID of the subscription\n   * @dev will revert if original owner of subId has\n   * not requested that msg.sender become the new owner.\n   */\n  function acceptSubscriptionOwnerTransfer(uint64 subId) external;\n\n  /**\n   * @notice Add a consumer to a VRF subscription.\n   * @param subId - ID of the subscription\n   * @param consumer - New consumer which can use the subscription\n   */\n  function addConsumer(uint64 subId, address consumer) external;\n\n  /**\n   * @notice Remove a consumer from a VRF subscription.\n   * @param subId - ID of the subscription\n   * @param consumer - Consumer to remove from the subscription\n   */\n  function removeConsumer(uint64 subId, address consumer) external;\n\n  /**\n   * @notice Cancel a subscription\n   * @param subId - ID of the subscription\n   * @param to - Where to send the remaining LINK to\n   */\n  function cancelSubscription(uint64 subId, address to) external;\n\n  /*\n   * @notice Check to see if there exists a request commitment consumers\n   * for all consumers and keyhashes for a given sub.\n   * @param subId - ID of the subscription\n   * @return true if there exists at least one unfulfilled request for the subscription, false\n   * otherwise.\n   */\n  function pendingRequestExists(uint64 subId) external view returns (bool);\n}\n"}},"settings":{"optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"sources":{"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol","exportedSymbols":{"VRFConsumerBaseV2":[57]},"id":58,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"32:23:0"},{"abstract":true,"baseContracts":[],"canonicalName":"VRFConsumerBaseV2","contractDependencies":[],"contractKind":"contract","documentation":{"id":2,"nodeType":"StructuredDocumentation","src":"57:5275:0","text":"****************************************************************************\n @notice Interface for contracts using VRF randomness\n *****************************************************************************\n @dev PURPOSE\n @dev Reggie the Random Oracle (not his real job) wants to provide randomness\n @dev to Vera the verifier in such a way that Vera can be sure he's not\n @dev making his output up to suit himself. Reggie provides Vera a public key\n @dev to which he knows the secret key. Each time Vera provides a seed to\n @dev Reggie, he gives back a value which is computed completely\n @dev deterministically from the seed and the secret key.\n @dev Reggie provides a proof by which Vera can verify that the output was\n @dev correctly computed once Reggie tells it to her, but without that proof,\n @dev the output is indistinguishable to her from a uniform random sample\n @dev from the output space.\n @dev The purpose of this contract is to make it easy for unrelated contracts\n @dev to talk to Vera the verifier about the work Reggie is doing, to provide\n @dev simple access to a verifiable source of randomness. It ensures 2 things:\n @dev 1. The fulfillment came from the VRFCoordinator\n @dev 2. The consumer contract implements fulfillRandomWords.\n *****************************************************************************\n @dev USAGE\n @dev Calling contracts must inherit from VRFConsumerBase, and can\n @dev initialize VRFConsumerBase's attributes in their constructor as\n @dev shown:\n @dev   contract VRFConsumer {\n @dev     constructor(<other arguments>, address _vrfCoordinator, address _link)\n @dev       VRFConsumerBase(_vrfCoordinator) public {\n @dev         <initialization with other arguments goes here>\n @dev       }\n @dev   }\n @dev The oracle will have given you an ID for the VRF keypair they have\n @dev committed to (let's call it keyHash). Create subscription, fund it\n @dev and your consumer contract as a consumer of it (see VRFCoordinatorInterface\n @dev subscription management functions).\n @dev Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,\n @dev callbackGasLimit, numWords),\n @dev see (VRFCoordinatorInterface for a description of the arguments).\n @dev Once the VRFCoordinator has received and validated the oracle's response\n @dev to your request, it will call your contract's fulfillRandomWords method.\n @dev The randomness argument to fulfillRandomWords is a set of random words\n @dev generated from your requestId and the blockHash of the request.\n @dev If your contract could have concurrent requests open, you can use the\n @dev requestId returned from requestRandomWords to track which response is associated\n @dev with which randomness request.\n @dev See \"SECURITY CONSIDERATIONS\" for principles to keep in mind,\n @dev if your contract could have multiple requests in flight simultaneously.\n @dev Colliding `requestId`s are cryptographically impossible as long as seeds\n @dev differ.\n *****************************************************************************\n @dev SECURITY CONSIDERATIONS\n @dev A method with the ability to call your fulfillRandomness method directly\n @dev could spoof a VRF response with any random value, so it's critical that\n @dev it cannot be directly called by anything other than this base contract\n @dev (specifically, by the VRFConsumerBase.rawFulfillRandomness method).\n @dev For your users to trust that your contract's random behavior is free\n @dev from malicious interference, it's best if you can write it so that all\n @dev behaviors implied by a VRF response are executed *during* your\n @dev fulfillRandomness method. If your contract must store the response (or\n @dev anything derived from it) and use it later, you must ensure that any\n @dev user-significant behavior which depends on that stored value cannot be\n @dev manipulated by a subsequent VRF request.\n @dev Similarly, both miners and the VRF oracle itself have some influence\n @dev over the order in which VRF responses appear on the blockchain, so if\n @dev your contract could have multiple VRF requests in flight simultaneously,\n @dev you must ensure that the order in which the VRF responses arrive cannot\n @dev be used to manipulate your contract's user-significant behavior.\n @dev Since the block hash of the block which contains the requestRandomness\n @dev call is mixed into the input to the VRF *last*, a sufficiently powerful\n @dev miner could, in principle, fork the blockchain to evict the block\n @dev containing the request, forcing the request to be included in a\n @dev different block with a different hash, and therefore a different input\n @dev to the VRF. However, such an attack would incur a substantial economic\n @dev cost. This cost scales with the number of blocks the VRF oracle waits\n @dev until it calls responds to a request. It is for this reason that\n @dev that you can signal to an oracle you'd like them to wait longer before\n @dev responding to the request (however this is not enforced in the contract\n @dev and so remains effective only in the case of unmodified oracle software)."},"fullyImplemented":false,"id":57,"linearizedBaseContracts":[57],"name":"VRFConsumerBaseV2","nameLocation":"5351:17:0","nodeType":"ContractDefinition","nodes":[{"errorSelector":"1cf993f4","id":8,"name":"OnlyCoordinatorCanFulfill","nameLocation":"5379:25:0","nodeType":"ErrorDefinition","parameters":{"id":7,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4,"mutability":"mutable","name":"have","nameLocation":"5413:4:0","nodeType":"VariableDeclaration","scope":8,"src":"5405:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3,"name":"address","nodeType":"ElementaryTypeName","src":"5405:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6,"mutability":"mutable","name":"want","nameLocation":"5427:4:0","nodeType":"VariableDeclaration","scope":8,"src":"5419:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5,"name":"address","nodeType":"ElementaryTypeName","src":"5419:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5404:28:0"},"src":"5373:60:0"},{"constant":false,"id":10,"mutability":"immutable","name":"vrfCoordinator","nameLocation":"5462:14:0","nodeType":"VariableDeclaration","scope":57,"src":"5436:40:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9,"name":"address","nodeType":"ElementaryTypeName","src":"5436:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"body":{"id":20,"nodeType":"Block","src":"5593:43:0","statements":[{"expression":{"id":18,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":16,"name":"vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"5599:14:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":17,"name":"_vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"5616:15:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5599:32:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":19,"nodeType":"ExpressionStatement","src":"5599:32:0"}]},"documentation":{"id":11,"nodeType":"StructuredDocumentation","src":"5481:72:0","text":" @param _vrfCoordinator address of VRFCoordinator contract"},"id":21,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":14,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13,"mutability":"mutable","name":"_vrfCoordinator","nameLocation":"5576:15:0","nodeType":"VariableDeclaration","scope":21,"src":"5568:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12,"name":"address","nodeType":"ElementaryTypeName","src":"5568:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5567:25:0"},"returnParameters":{"id":15,"nodeType":"ParameterList","parameters":[],"src":"5593:0:0"},"scope":57,"src":"5556:80:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"documentation":{"id":22,"nodeType":"StructuredDocumentation","src":"5640:686:0","text":" @notice fulfillRandomness handles the VRF response. Your contract must\n @notice implement it. See \"SECURITY CONSIDERATIONS\" above for important\n @notice principles to keep in mind when implementing your fulfillRandomness\n @notice method.\n @dev VRFConsumerBaseV2 expects its subcontracts to have a method with this\n @dev signature, and will call it once it has verified the proof\n @dev associated with the randomness. (It is triggered via a call to\n @dev rawFulfillRandomness, below.)\n @param requestId The Id initially returned by requestRandomness\n @param randomWords the VRF output expanded to the requested number of words"},"id":30,"implemented":false,"kind":"function","modifiers":[],"name":"fulfillRandomWords","nameLocation":"6338:18:0","nodeType":"FunctionDefinition","parameters":{"id":28,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24,"mutability":"mutable","name":"requestId","nameLocation":"6365:9:0","nodeType":"VariableDeclaration","scope":30,"src":"6357:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":23,"name":"uint256","nodeType":"ElementaryTypeName","src":"6357:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":27,"mutability":"mutable","name":"randomWords","nameLocation":"6393:11:0","nodeType":"VariableDeclaration","scope":30,"src":"6376:28:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":25,"name":"uint256","nodeType":"ElementaryTypeName","src":"6376:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":26,"nodeType":"ArrayTypeName","src":"6376:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"6356:49:0"},"returnParameters":{"id":29,"nodeType":"ParameterList","parameters":[],"src":"6422:0:0"},"scope":57,"src":"6329:94:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":55,"nodeType":"Block","src":"6707:167:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":41,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":38,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6717:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":39,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6721:6:0","memberName":"sender","nodeType":"MemberAccess","src":"6717:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":40,"name":"vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"6731:14:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6717:28:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":49,"nodeType":"IfStatement","src":"6713:109:0","trueBody":{"id":48,"nodeType":"Block","src":"6747:75:0","statements":[{"errorCall":{"arguments":[{"expression":{"id":43,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6788:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":44,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6792:6:0","memberName":"sender","nodeType":"MemberAccess","src":"6788:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":45,"name":"vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"6800:14:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":42,"name":"OnlyCoordinatorCanFulfill","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"6762:25:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$returns$__$","typeString":"function (address,address) pure"}},"id":46,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6762:53:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":47,"nodeType":"RevertStatement","src":"6755:60:0"}]}},{"expression":{"arguments":[{"id":51,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":32,"src":"6846:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":52,"name":"randomWords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":35,"src":"6857:11:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":50,"name":"fulfillRandomWords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"6827:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (uint256,uint256[] memory)"}},"id":53,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6827:42:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":54,"nodeType":"ExpressionStatement","src":"6827:42:0"}]},"functionSelector":"1fe543e3","id":56,"implemented":true,"kind":"function","modifiers":[],"name":"rawFulfillRandomWords","nameLocation":"6627:21:0","nodeType":"FunctionDefinition","parameters":{"id":36,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32,"mutability":"mutable","name":"requestId","nameLocation":"6657:9:0","nodeType":"VariableDeclaration","scope":56,"src":"6649:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":31,"name":"uint256","nodeType":"ElementaryTypeName","src":"6649:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":35,"mutability":"mutable","name":"randomWords","nameLocation":"6685:11:0","nodeType":"VariableDeclaration","scope":56,"src":"6668:28:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":33,"name":"uint256","nodeType":"ElementaryTypeName","src":"6668:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":34,"nodeType":"ArrayTypeName","src":"6668:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"6648:49:0"},"returnParameters":{"id":37,"nodeType":"ParameterList","parameters":[],"src":"6707:0:0"},"scope":57,"src":"6618:256:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":58,"src":"5333:1543:0","usedErrors":[8]}],"src":"32:6845:0"},"id":0},"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol","exportedSymbols":{"VRFCoordinatorV2Interface":[153]},"id":154,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":59,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:1"},{"abstract":false,"baseContracts":[],"canonicalName":"VRFCoordinatorV2Interface","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":153,"linearizedBaseContracts":[153],"name":"VRFCoordinatorV2Interface","nameLocation":"67:25:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":60,"nodeType":"StructuredDocumentation","src":"97:267:1","text":" @notice Get configuration relevant for making requests\n @return minimumRequestConfirmations global min for request confirmations\n @return maxGasLimit global max for request gas limit\n @return s_provingKeyHashes list of registered key hashes"},"functionSelector":"00012291","id":70,"implemented":false,"kind":"function","modifiers":[],"name":"getRequestConfig","nameLocation":"376:16:1","nodeType":"FunctionDefinition","parameters":{"id":61,"nodeType":"ParameterList","parameters":[],"src":"392:2:1"},"returnParameters":{"id":69,"nodeType":"ParameterList","parameters":[{"constant":false,"id":63,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":70,"src":"437:6:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":62,"name":"uint16","nodeType":"ElementaryTypeName","src":"437:6:1","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":65,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":70,"src":"451:6:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":64,"name":"uint32","nodeType":"ElementaryTypeName","src":"451:6:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":68,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":70,"src":"465:16:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":66,"name":"bytes32","nodeType":"ElementaryTypeName","src":"465:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":67,"nodeType":"ArrayTypeName","src":"465:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"429:58:1"},"scope":153,"src":"367:121:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":71,"nodeType":"StructuredDocumentation","src":"492:1511:1","text":" @notice Request a set of random words.\n @param keyHash - Corresponds to a particular oracle job which uses\n that key for generating the VRF proof. Different keyHash's have different gas price\n ceilings, so you can select a specific one to bound your maximum per request cost.\n @param subId  - The ID of the VRF subscription. Must be funded\n with the minimum subscription balance required for the selected keyHash.\n @param minimumRequestConfirmations - How many blocks you'd like the\n oracle to wait before responding to the request. See SECURITY CONSIDERATIONS\n for why you may want to request more. The acceptable range is\n [minimumRequestBlockConfirmations, 200].\n @param callbackGasLimit - How much gas you'd like to receive in your\n fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords\n may be slightly less than this amount because of gas used calling the function\n (argument decoding etc.), so you may need to request slightly more than you expect\n to have inside fulfillRandomWords. The acceptable range is\n [0, maxGasLimit]\n @param numWords - The number of uint256 random values you'd like to receive\n in your fulfillRandomWords callback. Note these numbers are expanded in a\n secure way by the VRFCoordinator from a single random value supplied by the oracle.\n @return requestId - A unique identifier of the request. Can be used to match\n a request to a response in fulfillRandomWords."},"functionSelector":"5d3b1d30","id":86,"implemented":false,"kind":"function","modifiers":[],"name":"requestRandomWords","nameLocation":"2015:18:1","nodeType":"FunctionDefinition","parameters":{"id":82,"nodeType":"ParameterList","parameters":[{"constant":false,"id":73,"mutability":"mutable","name":"keyHash","nameLocation":"2047:7:1","nodeType":"VariableDeclaration","scope":86,"src":"2039:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":72,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2039:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":75,"mutability":"mutable","name":"subId","nameLocation":"2067:5:1","nodeType":"VariableDeclaration","scope":86,"src":"2060:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":74,"name":"uint64","nodeType":"ElementaryTypeName","src":"2060:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":77,"mutability":"mutable","name":"minimumRequestConfirmations","nameLocation":"2085:27:1","nodeType":"VariableDeclaration","scope":86,"src":"2078:34:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":76,"name":"uint16","nodeType":"ElementaryTypeName","src":"2078:6:1","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":79,"mutability":"mutable","name":"callbackGasLimit","nameLocation":"2125:16:1","nodeType":"VariableDeclaration","scope":86,"src":"2118:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":78,"name":"uint32","nodeType":"ElementaryTypeName","src":"2118:6:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":81,"mutability":"mutable","name":"numWords","nameLocation":"2154:8:1","nodeType":"VariableDeclaration","scope":86,"src":"2147:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":80,"name":"uint32","nodeType":"ElementaryTypeName","src":"2147:6:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"2033:133:1"},"returnParameters":{"id":85,"nodeType":"ParameterList","parameters":[{"constant":false,"id":84,"mutability":"mutable","name":"requestId","nameLocation":"2193:9:1","nodeType":"VariableDeclaration","scope":86,"src":"2185:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":83,"name":"uint256","nodeType":"ElementaryTypeName","src":"2185:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2184:19:1"},"scope":153,"src":"2006:198:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":87,"nodeType":"StructuredDocumentation","src":"2208:384:1","text":" @notice Create a VRF subscription.\n @return subId - A unique subscription id.\n @dev You can manage the consumer set dynamically with addConsumer/removeConsumer.\n @dev Note to fund the subscription, use transferAndCall. For example\n @dev  LINKTOKEN.transferAndCall(\n @dev    address(COORDINATOR),\n @dev    amount,\n @dev    abi.encode(subId));"},"functionSelector":"a21a23e4","id":92,"implemented":false,"kind":"function","modifiers":[],"name":"createSubscription","nameLocation":"2604:18:1","nodeType":"FunctionDefinition","parameters":{"id":88,"nodeType":"ParameterList","parameters":[],"src":"2622:2:1"},"returnParameters":{"id":91,"nodeType":"ParameterList","parameters":[{"constant":false,"id":90,"mutability":"mutable","name":"subId","nameLocation":"2650:5:1","nodeType":"VariableDeclaration","scope":92,"src":"2643:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":89,"name":"uint64","nodeType":"ElementaryTypeName","src":"2643:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"2642:14:1"},"scope":153,"src":"2595:62:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":93,"nodeType":"StructuredDocumentation","src":"2661:381:1","text":" @notice Get a VRF subscription.\n @param subId - ID of the subscription\n @return balance - LINK balance of the subscription in juels.\n @return reqCount - number of requests for this subscription, determines fee tier.\n @return owner - owner of the subscription.\n @return consumers - list of consumer address which are able to use this subscription."},"functionSelector":"a47c7696","id":107,"implemented":false,"kind":"function","modifiers":[],"name":"getSubscription","nameLocation":"3054:15:1","nodeType":"FunctionDefinition","parameters":{"id":96,"nodeType":"ParameterList","parameters":[{"constant":false,"id":95,"mutability":"mutable","name":"subId","nameLocation":"3077:5:1","nodeType":"VariableDeclaration","scope":107,"src":"3070:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":94,"name":"uint64","nodeType":"ElementaryTypeName","src":"3070:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"3069:14:1"},"returnParameters":{"id":106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":98,"mutability":"mutable","name":"balance","nameLocation":"3133:7:1","nodeType":"VariableDeclaration","scope":107,"src":"3126:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":97,"name":"uint96","nodeType":"ElementaryTypeName","src":"3126:6:1","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":100,"mutability":"mutable","name":"reqCount","nameLocation":"3155:8:1","nodeType":"VariableDeclaration","scope":107,"src":"3148:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":99,"name":"uint64","nodeType":"ElementaryTypeName","src":"3148:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":102,"mutability":"mutable","name":"owner","nameLocation":"3179:5:1","nodeType":"VariableDeclaration","scope":107,"src":"3171:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":101,"name":"address","nodeType":"ElementaryTypeName","src":"3171:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":105,"mutability":"mutable","name":"consumers","nameLocation":"3209:9:1","nodeType":"VariableDeclaration","scope":107,"src":"3192:26:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":103,"name":"address","nodeType":"ElementaryTypeName","src":"3192:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":104,"nodeType":"ArrayTypeName","src":"3192:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"3118:106:1"},"scope":153,"src":"3045:180:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":108,"nodeType":"StructuredDocumentation","src":"3229:164:1","text":" @notice Request subscription owner transfer.\n @param subId - ID of the subscription\n @param newOwner - proposed new owner of the subscription"},"functionSelector":"04c357cb","id":115,"implemented":false,"kind":"function","modifiers":[],"name":"requestSubscriptionOwnerTransfer","nameLocation":"3405:32:1","nodeType":"FunctionDefinition","parameters":{"id":113,"nodeType":"ParameterList","parameters":[{"constant":false,"id":110,"mutability":"mutable","name":"subId","nameLocation":"3445:5:1","nodeType":"VariableDeclaration","scope":115,"src":"3438:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":109,"name":"uint64","nodeType":"ElementaryTypeName","src":"3438:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":112,"mutability":"mutable","name":"newOwner","nameLocation":"3460:8:1","nodeType":"VariableDeclaration","scope":115,"src":"3452:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":111,"name":"address","nodeType":"ElementaryTypeName","src":"3452:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3437:32:1"},"returnParameters":{"id":114,"nodeType":"ParameterList","parameters":[],"src":"3478:0:1"},"scope":153,"src":"3396:83:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":116,"nodeType":"StructuredDocumentation","src":"3483:212:1","text":" @notice Request subscription owner transfer.\n @param subId - ID of the subscription\n @dev will revert if original owner of subId has\n not requested that msg.sender become the new owner."},"functionSelector":"82359740","id":121,"implemented":false,"kind":"function","modifiers":[],"name":"acceptSubscriptionOwnerTransfer","nameLocation":"3707:31:1","nodeType":"FunctionDefinition","parameters":{"id":119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":118,"mutability":"mutable","name":"subId","nameLocation":"3746:5:1","nodeType":"VariableDeclaration","scope":121,"src":"3739:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":117,"name":"uint64","nodeType":"ElementaryTypeName","src":"3739:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"3738:14:1"},"returnParameters":{"id":120,"nodeType":"ParameterList","parameters":[],"src":"3761:0:1"},"scope":153,"src":"3698:64:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":122,"nodeType":"StructuredDocumentation","src":"3766:170:1","text":" @notice Add a consumer to a VRF subscription.\n @param subId - ID of the subscription\n @param consumer - New consumer which can use the subscription"},"functionSelector":"7341c10c","id":129,"implemented":false,"kind":"function","modifiers":[],"name":"addConsumer","nameLocation":"3948:11:1","nodeType":"FunctionDefinition","parameters":{"id":127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":124,"mutability":"mutable","name":"subId","nameLocation":"3967:5:1","nodeType":"VariableDeclaration","scope":129,"src":"3960:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":123,"name":"uint64","nodeType":"ElementaryTypeName","src":"3960:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":126,"mutability":"mutable","name":"consumer","nameLocation":"3982:8:1","nodeType":"VariableDeclaration","scope":129,"src":"3974:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":125,"name":"address","nodeType":"ElementaryTypeName","src":"3974:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3959:32:1"},"returnParameters":{"id":128,"nodeType":"ParameterList","parameters":[],"src":"4000:0:1"},"scope":153,"src":"3939:62:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":130,"nodeType":"StructuredDocumentation","src":"4005:172:1","text":" @notice Remove a consumer from a VRF subscription.\n @param subId - ID of the subscription\n @param consumer - Consumer to remove from the subscription"},"functionSelector":"9f87fad7","id":137,"implemented":false,"kind":"function","modifiers":[],"name":"removeConsumer","nameLocation":"4189:14:1","nodeType":"FunctionDefinition","parameters":{"id":135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":132,"mutability":"mutable","name":"subId","nameLocation":"4211:5:1","nodeType":"VariableDeclaration","scope":137,"src":"4204:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":131,"name":"uint64","nodeType":"ElementaryTypeName","src":"4204:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":134,"mutability":"mutable","name":"consumer","nameLocation":"4226:8:1","nodeType":"VariableDeclaration","scope":137,"src":"4218:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":133,"name":"address","nodeType":"ElementaryTypeName","src":"4218:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4203:32:1"},"returnParameters":{"id":136,"nodeType":"ParameterList","parameters":[],"src":"4244:0:1"},"scope":153,"src":"4180:65:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":138,"nodeType":"StructuredDocumentation","src":"4249:140:1","text":" @notice Cancel a subscription\n @param subId - ID of the subscription\n @param to - Where to send the remaining LINK to"},"functionSelector":"d7ae1d30","id":145,"implemented":false,"kind":"function","modifiers":[],"name":"cancelSubscription","nameLocation":"4401:18:1","nodeType":"FunctionDefinition","parameters":{"id":143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":140,"mutability":"mutable","name":"subId","nameLocation":"4427:5:1","nodeType":"VariableDeclaration","scope":145,"src":"4420:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":139,"name":"uint64","nodeType":"ElementaryTypeName","src":"4420:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":142,"mutability":"mutable","name":"to","nameLocation":"4442:2:1","nodeType":"VariableDeclaration","scope":145,"src":"4434:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":141,"name":"address","nodeType":"ElementaryTypeName","src":"4434:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4419:26:1"},"returnParameters":{"id":144,"nodeType":"ParameterList","parameters":[],"src":"4454:0:1"},"scope":153,"src":"4392:63:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"e82ad7d4","id":152,"implemented":false,"kind":"function","modifiers":[],"name":"pendingRequestExists","nameLocation":"4760:20:1","nodeType":"FunctionDefinition","parameters":{"id":148,"nodeType":"ParameterList","parameters":[{"constant":false,"id":147,"mutability":"mutable","name":"subId","nameLocation":"4788:5:1","nodeType":"VariableDeclaration","scope":152,"src":"4781:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":146,"name":"uint64","nodeType":"ElementaryTypeName","src":"4781:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"4780:14:1"},"returnParameters":{"id":151,"nodeType":"ParameterList","parameters":[{"constant":false,"id":150,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":152,"src":"4818:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":149,"name":"bool","nodeType":"ElementaryTypeName","src":"4818:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4817:6:1"},"scope":153,"src":"4751:73:1","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":154,"src":"57:4769:1","usedErrors":[]}],"src":"32:4795:1"},"id":1},"contracts/Raffle.sol":{"ast":{"absolutePath":"contracts/Raffle.sol","exportedSymbols":{"Raffle":[415],"Raffle__SendMoreToEnterRaffle":[159],"Raffle__TransferFailed":[161],"VRFConsumerBaseV2":[57],"VRFCoordinatorV2Interface":[153]},"id":416,"license":"SEE LICENSE IN LICENSE","nodeType":"SourceUnit","nodes":[{"id":155,"literals":["solidity","^","0.8",".7"],"nodeType":"PragmaDirective","src":"51:23:2"},{"absolutePath":"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol","file":"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol","id":156,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":416,"sourceUnit":58,"src":"75:61:2","symbolAliases":[],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol","file":"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol","id":157,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":416,"sourceUnit":154,"src":"137:80:2","symbolAliases":[],"unitAlias":""},{"errorSelector":"3038c00a","id":159,"name":"Raffle__SendMoreToEnterRaffle","nameLocation":"225:29:2","nodeType":"ErrorDefinition","parameters":{"id":158,"nodeType":"ParameterList","parameters":[],"src":"254:2:2"},"src":"219:38:2"},{"errorSelector":"a1d04b39","id":161,"name":"Raffle__TransferFailed","nameLocation":"264:22:2","nodeType":"ErrorDefinition","parameters":{"id":160,"nodeType":"ParameterList","parameters":[],"src":"286:2:2"},"src":"258:31:2"},{"abstract":false,"baseContracts":[{"baseName":{"id":162,"name":"VRFConsumerBaseV2","nameLocations":["310:17:2"],"nodeType":"IdentifierPath","referencedDeclaration":57,"src":"310:17:2"},"id":163,"nodeType":"InheritanceSpecifier","src":"310:17:2"}],"canonicalName":"Raffle","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":415,"linearizedBaseContracts":[415,57],"name":"Raffle","nameLocation":"300:6:2","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Raffle.RaffleState","id":166,"members":[{"id":164,"name":"OPEN","nameLocation":"381:4:2","nodeType":"EnumValue","src":"381:4:2"},{"id":165,"name":"CALCULATING","nameLocation":"391:11:2","nodeType":"EnumValue","src":"391:11:2"}],"name":"RaffleState","nameLocation":"363:11:2","nodeType":"EnumDefinition","src":"358:48:2"},{"constant":false,"id":168,"mutability":"immutable","name":"i_subscriptionId","nameLocation":"458:16:2","nodeType":"VariableDeclaration","scope":415,"src":"433:41:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":167,"name":"uint64","nodeType":"ElementaryTypeName","src":"433:6:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"private"},{"constant":false,"id":170,"mutability":"immutable","name":"i_gasLane","nameLocation":"504:9:2","nodeType":"VariableDeclaration","scope":415,"src":"478:35:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":169,"name":"bytes32","nodeType":"ElementaryTypeName","src":"478:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":172,"mutability":"immutable","name":"i_callbackGasLimit","nameLocation":"542:18:2","nodeType":"VariableDeclaration","scope":415,"src":"517:43:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":171,"name":"uint32","nodeType":"ElementaryTypeName","src":"517:6:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"private"},{"constant":true,"id":175,"mutability":"constant","name":"REQUEST_CONFIRMATIONS","nameLocation":"588:21:2","nodeType":"VariableDeclaration","scope":415,"src":"564:49:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":173,"name":"uint16","nodeType":"ElementaryTypeName","src":"564:6:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"value":{"hexValue":"33","id":174,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"612:1:2","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"visibility":"private"},{"constant":true,"id":178,"mutability":"constant","name":"NUM_WORDS","nameLocation":"641:9:2","nodeType":"VariableDeclaration","scope":415,"src":"617:37:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":176,"name":"uint32","nodeType":"ElementaryTypeName","src":"617:6:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"value":{"hexValue":"31","id":177,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"653:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":false,"id":180,"mutability":"immutable","name":"i_interval","nameLocation":"708:10:2","nodeType":"VariableDeclaration","scope":415,"src":"682:36:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":179,"name":"uint256","nodeType":"ElementaryTypeName","src":"682:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":182,"mutability":"immutable","name":"i_entranceFee","nameLocation":"748:13:2","nodeType":"VariableDeclaration","scope":415,"src":"722:39:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":181,"name":"uint256","nodeType":"ElementaryTypeName","src":"722:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":184,"mutability":"mutable","name":"s_lastTimeStamp","nameLocation":"781:15:2","nodeType":"VariableDeclaration","scope":415,"src":"765:31:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":183,"name":"uint256","nodeType":"ElementaryTypeName","src":"765:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":186,"mutability":"mutable","name":"s_recentWinner","nameLocation":"816:14:2","nodeType":"VariableDeclaration","scope":415,"src":"800:30:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":185,"name":"address","nodeType":"ElementaryTypeName","src":"800:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":false,"id":189,"mutability":"mutable","name":"s_players","nameLocation":"860:9:2","nodeType":"VariableDeclaration","scope":415,"src":"834:35:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage","typeString":"address payable[]"},"typeName":{"baseType":{"id":187,"name":"address","nodeType":"ElementaryTypeName","src":"834:15:2","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":188,"nodeType":"ArrayTypeName","src":"834:17:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage_ptr","typeString":"address payable[]"}},"visibility":"private"},{"constant":false,"id":192,"mutability":"mutable","name":"s_raffleState","nameLocation":"893:13:2","nodeType":"VariableDeclaration","scope":415,"src":"873:33:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RaffleState_$166","typeString":"enum Raffle.RaffleState"},"typeName":{"id":191,"nodeType":"UserDefinedTypeName","pathNode":{"id":190,"name":"RaffleState","nameLocations":["873:11:2"],"nodeType":"IdentifierPath","referencedDeclaration":166,"src":"873:11:2"},"referencedDeclaration":166,"src":"873:11:2","typeDescriptions":{"typeIdentifier":"t_enum$_RaffleState_$166","typeString":"enum Raffle.RaffleState"}},"visibility":"private"},{"constant":false,"id":195,"mutability":"immutable","name":"i_vrfCoordinator","nameLocation":"954:16:2","nodeType":"VariableDeclaration","scope":415,"src":"910:60:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2Interface_$153","typeString":"contract VRFCoordinatorV2Interface"},"typeName":{"id":194,"nodeType":"UserDefinedTypeName","pathNode":{"id":193,"name":"VRFCoordinatorV2Interface","nameLocations":["910:25:2"],"nodeType":"IdentifierPath","referencedDeclaration":153,"src":"910:25:2"},"referencedDeclaration":153,"src":"910:25:2","typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2Interface_$153","typeString":"contract VRFCoordinatorV2Interface"}},"visibility":"private"},{"anonymous":false,"eventSelector":"cd6e45c8998311cab7e9d4385596cac867e20a0587194b954fa3a731c93ce78b","id":199,"name":"RequestedRaffleWinner","nameLocation":"981:21:2","nodeType":"EventDefinition","parameters":{"id":198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":197,"indexed":true,"mutability":"mutable","name":"requestId","nameLocation":"1019:9:2","nodeType":"VariableDeclaration","scope":199,"src":"1003:25:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":196,"name":"uint256","nodeType":"ElementaryTypeName","src":"1003:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1002:27:2"},"src":"975:55:2"},{"anonymous":false,"eventSelector":"0805e1d667bddb8a95f0f09880cf94f403fb596ce79928d9f29b74203ba284d4","id":203,"name":"RaffleEnter","nameLocation":"1039:11:2","nodeType":"EventDefinition","parameters":{"id":202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":201,"indexed":true,"mutability":"mutable","name":"player","nameLocation":"1067:6:2","nodeType":"VariableDeclaration","scope":203,"src":"1051:22:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":200,"name":"address","nodeType":"ElementaryTypeName","src":"1051:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1050:24:2"},"src":"1033:42:2"},{"anonymous":false,"eventSelector":"cc58b13ad3eab50626c6a6300b1d139cd6ebb1688a7cced9461c2f7e762665ee","id":209,"name":"RequestSent","nameLocation":"1084:11:2","nodeType":"EventDefinition","parameters":{"id":208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":205,"indexed":false,"mutability":"mutable","name":"requestId","nameLocation":"1104:9:2","nodeType":"VariableDeclaration","scope":209,"src":"1096:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":204,"name":"uint256","nodeType":"ElementaryTypeName","src":"1096:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":207,"indexed":false,"mutability":"mutable","name":"numWords","nameLocation":"1122:8:2","nodeType":"VariableDeclaration","scope":209,"src":"1115:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":206,"name":"uint32","nodeType":"ElementaryTypeName","src":"1115:6:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"1095:36:2"},"src":"1078:54:2"},{"anonymous":false,"eventSelector":"5b690ec4a06fe979403046eaeea5b3ce38524683c3001f662c8b5a829632f7df","id":213,"name":"WinnerPicked","nameLocation":"1141:12:2","nodeType":"EventDefinition","parameters":{"id":212,"nodeType":"ParameterList","parameters":[{"constant":false,"id":211,"indexed":true,"mutability":"mutable","name":"requestId","nameLocation":"1170:9:2","nodeType":"VariableDeclaration","scope":213,"src":"1154:25:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":210,"name":"address","nodeType":"ElementaryTypeName","src":"1154:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1153:27:2"},"src":"1135:46:2"},{"anonymous":false,"eventSelector":"fe2e2d779dba245964d4e3ef9b994be63856fd568bf7d3ca9e224755cb1bd54d","id":220,"name":"RequestFulfilled","nameLocation":"1190:16:2","nodeType":"EventDefinition","parameters":{"id":219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":215,"indexed":false,"mutability":"mutable","name":"requestId","nameLocation":"1215:9:2","nodeType":"VariableDeclaration","scope":220,"src":"1207:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":214,"name":"uint256","nodeType":"ElementaryTypeName","src":"1207:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":218,"indexed":false,"mutability":"mutable","name":"randomWords","nameLocation":"1236:11:2","nodeType":"VariableDeclaration","scope":220,"src":"1226:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":216,"name":"uint256","nodeType":"ElementaryTypeName","src":"1226:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":217,"nodeType":"ArrayTypeName","src":"1226:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1206:42:2"},"src":"1184:65:2"},{"body":{"id":274,"nodeType":"Block","src":"1470:317:2","statements":[{"expression":{"id":242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":238,"name":"i_vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":195,"src":"1476:16:2","typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2Interface_$153","typeString":"contract VRFCoordinatorV2Interface"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":240,"name":"vrfCoordinatorV2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":222,"src":"1521:16:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":239,"name":"VRFCoordinatorV2Interface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":153,"src":"1495:25:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_VRFCoordinatorV2Interface_$153_$","typeString":"type(contract VRFCoordinatorV2Interface)"}},"id":241,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1495:43:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2Interface_$153","typeString":"contract VRFCoordinatorV2Interface"}},"src":"1476:62:2","typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2Interface_$153","typeString":"contract VRFCoordinatorV2Interface"}},"id":243,"nodeType":"ExpressionStatement","src":"1476:62:2"},{"expression":{"id":246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":244,"name":"i_gasLane","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":170,"src":"1544:9:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":245,"name":"gasLane","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":226,"src":"1556:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"1544:19:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":247,"nodeType":"ExpressionStatement","src":"1544:19:2"},{"expression":{"id":250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":248,"name":"i_interval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":180,"src":"1569:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":249,"name":"interval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":228,"src":"1582:8:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1569:21:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":251,"nodeType":"ExpressionStatement","src":"1569:21:2"},{"expression":{"id":254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":252,"name":"i_subscriptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":168,"src":"1596:16:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":253,"name":"subscriptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"1615:14:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"1596:33:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":255,"nodeType":"ExpressionStatement","src":"1596:33:2"},{"expression":{"id":258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":256,"name":"i_entranceFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":182,"src":"1635:13:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":257,"name":"entranceFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":230,"src":"1651:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1635:27:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":259,"nodeType":"ExpressionStatement","src":"1635:27:2"},{"expression":{"id":263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":260,"name":"s_raffleState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":192,"src":"1668:13:2","typeDescriptions":{"typeIdentifier":"t_enum$_RaffleState_$166","typeString":"enum Raffle.RaffleState"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":261,"name":"RaffleState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":166,"src":"1684:11:2","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RaffleState_$166_$","typeString":"type(enum Raffle.RaffleState)"}},"id":262,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1696:4:2","memberName":"OPEN","nodeType":"MemberAccess","referencedDeclaration":164,"src":"1684:16:2","typeDescriptions":{"typeIdentifier":"t_enum$_RaffleState_$166","typeString":"enum Raffle.RaffleState"}},"src":"1668:32:2","typeDescriptions":{"typeIdentifier":"t_enum$_RaffleState_$166","typeString":"enum Raffle.RaffleState"}},"id":264,"nodeType":"ExpressionStatement","src":"1668:32:2"},{"expression":{"id":268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":265,"name":"s_lastTimeStamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":184,"src":"1706:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":266,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1724:5:2","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1730:9:2","memberName":"timestamp","nodeType":"MemberAccess","src":"1724:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1706:33:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":269,"nodeType":"ExpressionStatement","src":"1706:33:2"},{"expression":{"id":272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":270,"name":"i_callbackGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":172,"src":"1745:18:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":271,"name":"callbackGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":232,"src":"1766:16:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"1745:37:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"id":273,"nodeType":"ExpressionStatement","src":"1745:37:2"}]},"id":275,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":235,"name":"vrfCoordinatorV2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":222,"src":"1452:16:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":236,"kind":"baseConstructorSpecifier","modifierName":{"id":234,"name":"VRFConsumerBaseV2","nameLocations":["1434:17:2"],"nodeType":"IdentifierPath","referencedDeclaration":57,"src":"1434:17:2"},"nodeType":"ModifierInvocation","src":"1434:35:2"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":222,"mutability":"mutable","name":"vrfCoordinatorV2","nameLocation":"1278:16:2","nodeType":"VariableDeclaration","scope":275,"src":"1270:24:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":221,"name":"address","nodeType":"ElementaryTypeName","src":"1270:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":224,"mutability":"mutable","name":"subscriptionId","nameLocation":"1307:14:2","nodeType":"VariableDeclaration","scope":275,"src":"1300:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":223,"name":"uint64","nodeType":"ElementaryTypeName","src":"1300:6:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":226,"mutability":"mutable","name":"gasLane","nameLocation":"1335:7:2","nodeType":"VariableDeclaration","scope":275,"src":"1327:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":225,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1327:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":228,"mutability":"mutable","name":"interval","nameLocation":"1367:8:2","nodeType":"VariableDeclaration","scope":275,"src":"1359:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":227,"name":"uint256","nodeType":"ElementaryTypeName","src":"1359:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":230,"mutability":"mutable","name":"entranceFee","nameLocation":"1389:11:2","nodeType":"VariableDeclaration","scope":275,"src":"1381:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":229,"name":"uint256","nodeType":"ElementaryTypeName","src":"1381:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":232,"mutability":"mutable","name":"callbackGasLimit","nameLocation":"1413:16:2","nodeType":"VariableDeclaration","scope":275,"src":"1406:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":231,"name":"uint32","nodeType":"ElementaryTypeName","src":"1406:6:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"1264:169:2"},"returnParameters":{"id":237,"nodeType":"ParameterList","parameters":[],"src":"1470:0:2"},"scope":415,"src":"1253:534:2","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":303,"nodeType":"Block","src":"1829:186:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":278,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1839:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1843:5:2","memberName":"value","nodeType":"MemberAccess","src":"1839:9:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":280,"name":"i_entranceFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":182,"src":"1851:13:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1839:25:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":301,"nodeType":"Block","src":"1925:86:2","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":291,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1956:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1960:6:2","memberName":"sender","nodeType":"MemberAccess","src":"1956:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":290,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1948:8:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":289,"name":"address","nodeType":"ElementaryTypeName","src":"1948:8:2","stateMutability":"payable","typeDescriptions":{}}},"id":293,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1948:19:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"}],"expression":{"id":286,"name":"s_players","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":189,"src":"1933:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage","typeString":"address payable[] storage ref"}},"id":288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1943:4:2","memberName":"push","nodeType":"MemberAccess","src":"1933:14:2","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_address_payable_$dyn_storage_ptr_$_t_address_payable_$returns$__$bound_to$_t_array$_t_address_payable_$dyn_storage_ptr_$","typeString":"function (address payable[] storage pointer,address payable)"}},"id":294,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1933:35:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":295,"nodeType":"ExpressionStatement","src":"1933:35:2"},{"eventCall":{"arguments":[{"expression":{"id":297,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1993:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1997:6:2","memberName":"sender","nodeType":"MemberAccess","src":"1993:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":296,"name":"RaffleEnter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":203,"src":"1981:11:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":299,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1981:23:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":300,"nodeType":"EmitStatement","src":"1976:28:2"}]},"id":302,"nodeType":"IfStatement","src":"1835:176:2","trueBody":{"id":285,"nodeType":"Block","src":"1866:53:2","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":282,"name":"Raffle__SendMoreToEnterRaffle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":159,"src":"1881:29:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1881:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":284,"nodeType":"RevertStatement","src":"1874:38:2"}]}}]},"functionSelector":"2cfcc539","id":304,"implemented":true,"kind":"function","modifiers":[],"name":"enterRaffle","nameLocation":"1800:11:2","nodeType":"FunctionDefinition","parameters":{"id":276,"nodeType":"ParameterList","parameters":[],"src":"1811:2:2"},"returnParameters":{"id":277,"nodeType":"ParameterList","parameters":[],"src":"1829:0:2"},"scope":415,"src":"1791:224:2","stateMutability":"payable","virtual":false,"visibility":"public"},{"body":{"id":322,"nodeType":"Block","src":"2058:286:2","statements":[{"assignments":[308],"declarations":[{"constant":false,"id":308,"mutability":"mutable","name":"requestId","nameLocation":"2130:9:2","nodeType":"VariableDeclaration","scope":322,"src":"2122:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":307,"name":"uint256","nodeType":"ElementaryTypeName","src":"2122:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":317,"initialValue":{"arguments":[{"id":311,"name":"i_gasLane","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":170,"src":"2185:9:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":312,"name":"i_subscriptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":168,"src":"2202:16:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":313,"name":"REQUEST_CONFIRMATIONS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":175,"src":"2226:21:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":314,"name":"i_callbackGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":172,"src":"2255:18:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":315,"name":"NUM_WORDS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":178,"src":"2281:9:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint32","typeString":"uint32"}],"expression":{"id":309,"name":"i_vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":195,"src":"2142:16:2","typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2Interface_$153","typeString":"contract VRFCoordinatorV2Interface"}},"id":310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2159:18:2","memberName":"requestRandomWords","nodeType":"MemberAccess","referencedDeclaration":86,"src":"2142:35:2","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_bytes32_$_t_uint64_$_t_uint16_$_t_uint32_$_t_uint32_$returns$_t_uint256_$","typeString":"function (bytes32,uint64,uint16,uint32,uint32) external returns (uint256)"}},"id":316,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2142:154:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2122:174:2"},{"eventCall":{"arguments":[{"id":319,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":308,"src":"2329:9:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":318,"name":"RequestedRaffleWinner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":199,"src":"2307:21:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":320,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2307:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":321,"nodeType":"EmitStatement","src":"2302:37:2"}]},"functionSelector":"e0c86289","id":323,"implemented":true,"kind":"function","modifiers":[],"name":"requestRandomWords","nameLocation":"2028:18:2","nodeType":"FunctionDefinition","parameters":{"id":305,"nodeType":"ParameterList","parameters":[],"src":"2046:2:2"},"returnParameters":{"id":306,"nodeType":"ParameterList","parameters":[],"src":"2058:0:2"},"scope":415,"src":"2019:325:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[30],"body":{"id":393,"nodeType":"Block","src":"2461:505:2","statements":[{"assignments":[333],"declarations":[{"constant":false,"id":333,"mutability":"mutable","name":"indexOfWinner","nameLocation":"2475:13:2","nodeType":"VariableDeclaration","scope":393,"src":"2467:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":332,"name":"uint256","nodeType":"ElementaryTypeName","src":"2467:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":340,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":334,"name":"randomWords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":328,"src":"2491:11:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":336,"indexExpression":{"hexValue":"30","id":335,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2503:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2491:14:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"expression":{"id":337,"name":"s_players","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":189,"src":"2508:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage","typeString":"address payable[] storage ref"}},"id":338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2518:6:2","memberName":"length","nodeType":"MemberAccess","src":"2508:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2491:33:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2467:57:2"},{"assignments":[342],"declarations":[{"constant":false,"id":342,"mutability":"mutable","name":"recentWinner","nameLocation":"2546:12:2","nodeType":"VariableDeclaration","scope":393,"src":"2530:28:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":341,"name":"address","nodeType":"ElementaryTypeName","src":"2530:15:2","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"id":346,"initialValue":{"baseExpression":{"id":343,"name":"s_players","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":189,"src":"2561:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage","typeString":"address payable[] storage ref"}},"id":345,"indexExpression":{"id":344,"name":"indexOfWinner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":333,"src":"2571:13:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2561:24:2","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"nodeType":"VariableDeclarationStatement","src":"2530:55:2"},{"expression":{"id":349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":347,"name":"s_recentWinner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":186,"src":"2591:14:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":348,"name":"recentWinner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":342,"src":"2608:12:2","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"2591:29:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":350,"nodeType":"ExpressionStatement","src":"2591:29:2"},{"expression":{"id":357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":351,"name":"s_players","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":189,"src":"2626:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage","typeString":"address payable[] storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"30","id":355,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2660:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":354,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2638:21:2","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_payable_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address payable[] memory)"},"typeName":{"baseType":{"id":352,"name":"address","nodeType":"ElementaryTypeName","src":"2642:15:2","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":353,"nodeType":"ArrayTypeName","src":"2642:17:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage_ptr","typeString":"address payable[]"}}},"id":356,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2638:24:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_memory_ptr","typeString":"address payable[] memory"}},"src":"2626:36:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage","typeString":"address payable[] storage ref"}},"id":358,"nodeType":"ExpressionStatement","src":"2626:36:2"},{"expression":{"id":362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":359,"name":"s_raffleState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":192,"src":"2668:13:2","typeDescriptions":{"typeIdentifier":"t_enum$_RaffleState_$166","typeString":"enum Raffle.RaffleState"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":360,"name":"RaffleState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":166,"src":"2684:11:2","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RaffleState_$166_$","typeString":"type(enum Raffle.RaffleState)"}},"id":361,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2696:4:2","memberName":"OPEN","nodeType":"MemberAccess","referencedDeclaration":164,"src":"2684:16:2","typeDescriptions":{"typeIdentifier":"t_enum$_RaffleState_$166","typeString":"enum Raffle.RaffleState"}},"src":"2668:32:2","typeDescriptions":{"typeIdentifier":"t_enum$_RaffleState_$166","typeString":"enum Raffle.RaffleState"}},"id":363,"nodeType":"ExpressionStatement","src":"2668:32:2"},{"expression":{"id":367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":364,"name":"s_lastTimeStamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":184,"src":"2706:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":365,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2724:5:2","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2730:9:2","memberName":"timestamp","nodeType":"MemberAccess","src":"2724:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2706:33:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":368,"nodeType":"ExpressionStatement","src":"2706:33:2"},{"assignments":[370,null],"declarations":[{"constant":false,"id":370,"mutability":"mutable","name":"success","nameLocation":"2751:7:2","nodeType":"VariableDeclaration","scope":393,"src":"2746:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":369,"name":"bool","nodeType":"ElementaryTypeName","src":"2746:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":381,"initialValue":{"arguments":[{"hexValue":"","id":379,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2812:2:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":371,"name":"recentWinner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":342,"src":"2764:12:2","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2777:4:2","memberName":"call","nodeType":"MemberAccess","src":"2764:17:2","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"expression":{"arguments":[{"id":375,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2797:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_Raffle_$415","typeString":"contract Raffle"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Raffle_$415","typeString":"contract Raffle"}],"id":374,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2789:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":373,"name":"address","nodeType":"ElementaryTypeName","src":"2789:7:2","typeDescriptions":{}}},"id":376,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2789:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2803:7:2","memberName":"balance","nodeType":"MemberAccess","src":"2789:21:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2764:47:2","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":380,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2764:51:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2745:70:2"},{"condition":{"id":383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2869:8:2","subExpression":{"id":382,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":370,"src":"2870:7:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":388,"nodeType":"IfStatement","src":"2865:60:2","trueBody":{"id":387,"nodeType":"Block","src":"2879:46:2","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":384,"name":"Raffle__TransferFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":161,"src":"2894:22:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":385,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2894:24:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":386,"nodeType":"RevertStatement","src":"2887:31:2"}]}},{"eventCall":{"arguments":[{"id":390,"name":"recentWinner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":342,"src":"2948:12:2","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"}],"id":389,"name":"WinnerPicked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":213,"src":"2935:12:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":391,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2935:26:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":392,"nodeType":"EmitStatement","src":"2930:31:2"}]},"id":394,"implemented":true,"kind":"function","modifiers":[],"name":"fulfillRandomWords","nameLocation":"2357:18:2","nodeType":"FunctionDefinition","overrides":{"id":330,"nodeType":"OverrideSpecifier","overrides":[],"src":"2452:8:2"},"parameters":{"id":329,"nodeType":"ParameterList","parameters":[{"constant":false,"id":325,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":394,"src":"2381:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":324,"name":"uint256","nodeType":"ElementaryTypeName","src":"2381:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":328,"mutability":"mutable","name":"randomWords","nameLocation":"2427:11:2","nodeType":"VariableDeclaration","scope":394,"src":"2410:28:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":326,"name":"uint256","nodeType":"ElementaryTypeName","src":"2410:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":327,"nodeType":"ArrayTypeName","src":"2410:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2375:67:2"},"returnParameters":{"id":331,"nodeType":"ParameterList","parameters":[],"src":"2461:0:2"},"scope":415,"src":"2348:618:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":405,"nodeType":"Block","src":"3034:34:2","statements":[{"expression":{"baseExpression":{"id":401,"name":"s_players","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":189,"src":"3047:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage","typeString":"address payable[] storage ref"}},"id":403,"indexExpression":{"id":402,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":396,"src":"3057:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3047:16:2","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"functionReturnParameters":400,"id":404,"nodeType":"Return","src":"3040:23:2"}]},"functionSelector":"e55ae4e8","id":406,"implemented":true,"kind":"function","modifiers":[],"name":"getPlayer","nameLocation":"2979:9:2","nodeType":"FunctionDefinition","parameters":{"id":397,"nodeType":"ParameterList","parameters":[{"constant":false,"id":396,"mutability":"mutable","name":"index","nameLocation":"2997:5:2","nodeType":"VariableDeclaration","scope":406,"src":"2989:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":395,"name":"uint256","nodeType":"ElementaryTypeName","src":"2989:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2988:15:2"},"returnParameters":{"id":400,"nodeType":"ParameterList","parameters":[{"constant":false,"id":399,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":406,"src":"3025:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":398,"name":"address","nodeType":"ElementaryTypeName","src":"3025:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3024:9:2"},"scope":415,"src":"2970:98:2","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":413,"nodeType":"Block","src":"3129:32:2","statements":[{"expression":{"id":411,"name":"s_recentWinner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":186,"src":"3142:14:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":410,"id":412,"nodeType":"Return","src":"3135:21:2"}]},"functionSelector":"473f1ddc","id":414,"implemented":true,"kind":"function","modifiers":[],"name":"getRecentWinner","nameLocation":"3081:15:2","nodeType":"FunctionDefinition","parameters":{"id":407,"nodeType":"ParameterList","parameters":[],"src":"3096:2:2"},"returnParameters":{"id":410,"nodeType":"ParameterList","parameters":[{"constant":false,"id":409,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":414,"src":"3120:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":408,"name":"address","nodeType":"ElementaryTypeName","src":"3120:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3119:9:2"},"scope":415,"src":"3072:89:2","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":416,"src":"291:2872:2","usedErrors":[8,159,161]}],"src":"51:3113:2"},"id":2}},"contracts":{"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol":{"VRFConsumerBaseV2":{"abi":[{"inputs":[{"internalType":"address","name":"have","type":"address"},{"internalType":"address","name":"want","type":"address"}],"name":"OnlyCoordinatorCanFulfill","type":"error"},{"inputs":[{"internalType":"uint256","name":"requestId","type":"uint256"},{"internalType":"uint256[]","name":"randomWords","type":"uint256[]"}],"name":"rawFulfillRandomWords","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"PURPOSEReggie the Random Oracle (not his real job) wants to provide randomnessto Vera the verifier in such a way that Vera can be sure he's notmaking his output up to suit himself. Reggie provides Vera a public keyto which he knows the secret key. Each time Vera provides a seed toReggie, he gives back a value which is computed completelydeterministically from the seed and the secret key.Reggie provides a proof by which Vera can verify that the output wascorrectly computed once Reggie tells it to her, but without that proof,the output is indistinguishable to her from a uniform random samplefrom the output space.The purpose of this contract is to make it easy for unrelated contractsto talk to Vera the verifier about the work Reggie is doing, to providesimple access to a verifiable source of randomness. It ensures 2 things:1. The fulfillment came from the VRFCoordinator2. The consumer contract implements fulfillRandomWords. *****************************************************************************USAGECalling contracts must inherit from VRFConsumerBase, and caninitialize VRFConsumerBase's attributes in their constructor asshown:contract VRFConsumer {constructor(<other arguments>, address _vrfCoordinator, address _link)VRFConsumerBase(_vrfCoordinator) public {<initialization with other arguments goes here>}}The oracle will have given you an ID for the VRF keypair they havecommitted to (let's call it keyHash). Create subscription, fund itand your consumer contract as a consumer of it (see VRFCoordinatorInterfacesubscription management functions).Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,callbackGasLimit, numWords),see (VRFCoordinatorInterface for a description of the arguments).Once the VRFCoordinator has received and validated the oracle's responseto your request, it will call your contract's fulfillRandomWords method.The randomness argument to fulfillRandomWords is a set of random wordsgenerated from your requestId and the blockHash of the request.If your contract could have concurrent requests open, you can use therequestId returned from requestRandomWords to track which response is associatedwith which randomness request.See \"SECURITY CONSIDERATIONS\" for principles to keep in mind,if your contract could have multiple requests in flight simultaneously.Colliding `requestId`s are cryptographically impossible as long as seedsdiffer. *****************************************************************************SECURITY CONSIDERATIONSA method with the ability to call your fulfillRandomness method directlycould spoof a VRF response with any random value, so it's critical thatit cannot be directly called by anything other than this base contract(specifically, by the VRFConsumerBase.rawFulfillRandomness method).For your users to trust that your contract's random behavior is freefrom malicious interference, it's best if you can write it so that allbehaviors implied by a VRF response are executed *during* yourfulfillRandomness method. If your contract must store the response (oranything derived from it) and use it later, you must ensure that anyuser-significant behavior which depends on that stored value cannot bemanipulated by a subsequent VRF request.Similarly, both miners and the VRF oracle itself have some influenceover the order in which VRF responses appear on the blockchain, so ifyour contract could have multiple VRF requests in flight simultaneously,you must ensure that the order in which the VRF responses arrive cannotbe used to manipulate your contract's user-significant behavior.Since the block hash of the block which contains the requestRandomnesscall is mixed into the input to the VRF *last*, a sufficiently powerfulminer could, in principle, fork the blockchain to evict the blockcontaining the request, forcing the request to be included in adifferent block with a different hash, and therefore a different inputto the VRF. However, such an attack would incur a substantial economiccost. This cost scales with the number of blocks the VRF oracle waitsuntil it calls responds to a request. It is for this reason thatthat you can signal to an oracle you'd like them to wait longer beforeresponding to the request (however this is not enforced in the contractand so remains effective only in the case of unmodified oracle software).","kind":"dev","methods":{"constructor":{"params":{"_vrfCoordinator":"address of VRFCoordinator contract"}}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"rawFulfillRandomWords(uint256,uint256[])":"1fe543e3"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"have\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"want\",\"type\":\"address\"}],\"name\":\"OnlyCoordinatorCanFulfill\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"randomWords\",\"type\":\"uint256[]\"}],\"name\":\"rawFulfillRandomWords\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"PURPOSEReggie the Random Oracle (not his real job) wants to provide randomnessto Vera the verifier in such a way that Vera can be sure he's notmaking his output up to suit himself. Reggie provides Vera a public keyto which he knows the secret key. Each time Vera provides a seed toReggie, he gives back a value which is computed completelydeterministically from the seed and the secret key.Reggie provides a proof by which Vera can verify that the output wascorrectly computed once Reggie tells it to her, but without that proof,the output is indistinguishable to her from a uniform random samplefrom the output space.The purpose of this contract is to make it easy for unrelated contractsto talk to Vera the verifier about the work Reggie is doing, to providesimple access to a verifiable source of randomness. It ensures 2 things:1. The fulfillment came from the VRFCoordinator2. The consumer contract implements fulfillRandomWords. *****************************************************************************USAGECalling contracts must inherit from VRFConsumerBase, and caninitialize VRFConsumerBase's attributes in their constructor asshown:contract VRFConsumer {constructor(<other arguments>, address _vrfCoordinator, address _link)VRFConsumerBase(_vrfCoordinator) public {<initialization with other arguments goes here>}}The oracle will have given you an ID for the VRF keypair they havecommitted to (let's call it keyHash). Create subscription, fund itand your consumer contract as a consumer of it (see VRFCoordinatorInterfacesubscription management functions).Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,callbackGasLimit, numWords),see (VRFCoordinatorInterface for a description of the arguments).Once the VRFCoordinator has received and validated the oracle's responseto your request, it will call your contract's fulfillRandomWords method.The randomness argument to fulfillRandomWords is a set of random wordsgenerated from your requestId and the blockHash of the request.If your contract could have concurrent requests open, you can use therequestId returned from requestRandomWords to track which response is associatedwith which randomness request.See \\\"SECURITY CONSIDERATIONS\\\" for principles to keep in mind,if your contract could have multiple requests in flight simultaneously.Colliding `requestId`s are cryptographically impossible as long as seedsdiffer. *****************************************************************************SECURITY CONSIDERATIONSA method with the ability to call your fulfillRandomness method directlycould spoof a VRF response with any random value, so it's critical thatit cannot be directly called by anything other than this base contract(specifically, by the VRFConsumerBase.rawFulfillRandomness method).For your users to trust that your contract's random behavior is freefrom malicious interference, it's best if you can write it so that allbehaviors implied by a VRF response are executed *during* yourfulfillRandomness method. If your contract must store the response (oranything derived from it) and use it later, you must ensure that anyuser-significant behavior which depends on that stored value cannot bemanipulated by a subsequent VRF request.Similarly, both miners and the VRF oracle itself have some influenceover the order in which VRF responses appear on the blockchain, so ifyour contract could have multiple VRF requests in flight simultaneously,you must ensure that the order in which the VRF responses arrive cannotbe used to manipulate your contract's user-significant behavior.Since the block hash of the block which contains the requestRandomnesscall is mixed into the input to the VRF *last*, a sufficiently powerfulminer could, in principle, fork the blockchain to evict the blockcontaining the request, forcing the request to be included in adifferent block with a different hash, and therefore a different inputto the VRF. However, such an attack would incur a substantial economiccost. This cost scales with the number of blocks the VRF oracle waitsuntil it calls responds to a request. It is for this reason thatthat you can signal to an oracle you'd like them to wait longer beforeresponding to the request (however this is not enforced in the contractand so remains effective only in the case of unmodified oracle software).\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_vrfCoordinator\":\"address of VRFCoordinator contract\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"****************************************************************************Interface for contracts using VRF randomness *****************************************************************************\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol\":\"VRFConsumerBaseV2\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\n/** ****************************************************************************\\n * @notice Interface for contracts using VRF randomness\\n * *****************************************************************************\\n * @dev PURPOSE\\n *\\n * @dev Reggie the Random Oracle (not his real job) wants to provide randomness\\n * @dev to Vera the verifier in such a way that Vera can be sure he's not\\n * @dev making his output up to suit himself. Reggie provides Vera a public key\\n * @dev to which he knows the secret key. Each time Vera provides a seed to\\n * @dev Reggie, he gives back a value which is computed completely\\n * @dev deterministically from the seed and the secret key.\\n *\\n * @dev Reggie provides a proof by which Vera can verify that the output was\\n * @dev correctly computed once Reggie tells it to her, but without that proof,\\n * @dev the output is indistinguishable to her from a uniform random sample\\n * @dev from the output space.\\n *\\n * @dev The purpose of this contract is to make it easy for unrelated contracts\\n * @dev to talk to Vera the verifier about the work Reggie is doing, to provide\\n * @dev simple access to a verifiable source of randomness. It ensures 2 things:\\n * @dev 1. The fulfillment came from the VRFCoordinator\\n * @dev 2. The consumer contract implements fulfillRandomWords.\\n * *****************************************************************************\\n * @dev USAGE\\n *\\n * @dev Calling contracts must inherit from VRFConsumerBase, and can\\n * @dev initialize VRFConsumerBase's attributes in their constructor as\\n * @dev shown:\\n *\\n * @dev   contract VRFConsumer {\\n * @dev     constructor(<other arguments>, address _vrfCoordinator, address _link)\\n * @dev       VRFConsumerBase(_vrfCoordinator) public {\\n * @dev         <initialization with other arguments goes here>\\n * @dev       }\\n * @dev   }\\n *\\n * @dev The oracle will have given you an ID for the VRF keypair they have\\n * @dev committed to (let's call it keyHash). Create subscription, fund it\\n * @dev and your consumer contract as a consumer of it (see VRFCoordinatorInterface\\n * @dev subscription management functions).\\n * @dev Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,\\n * @dev callbackGasLimit, numWords),\\n * @dev see (VRFCoordinatorInterface for a description of the arguments).\\n *\\n * @dev Once the VRFCoordinator has received and validated the oracle's response\\n * @dev to your request, it will call your contract's fulfillRandomWords method.\\n *\\n * @dev The randomness argument to fulfillRandomWords is a set of random words\\n * @dev generated from your requestId and the blockHash of the request.\\n *\\n * @dev If your contract could have concurrent requests open, you can use the\\n * @dev requestId returned from requestRandomWords to track which response is associated\\n * @dev with which randomness request.\\n * @dev See \\\"SECURITY CONSIDERATIONS\\\" for principles to keep in mind,\\n * @dev if your contract could have multiple requests in flight simultaneously.\\n *\\n * @dev Colliding `requestId`s are cryptographically impossible as long as seeds\\n * @dev differ.\\n *\\n * *****************************************************************************\\n * @dev SECURITY CONSIDERATIONS\\n *\\n * @dev A method with the ability to call your fulfillRandomness method directly\\n * @dev could spoof a VRF response with any random value, so it's critical that\\n * @dev it cannot be directly called by anything other than this base contract\\n * @dev (specifically, by the VRFConsumerBase.rawFulfillRandomness method).\\n *\\n * @dev For your users to trust that your contract's random behavior is free\\n * @dev from malicious interference, it's best if you can write it so that all\\n * @dev behaviors implied by a VRF response are executed *during* your\\n * @dev fulfillRandomness method. If your contract must store the response (or\\n * @dev anything derived from it) and use it later, you must ensure that any\\n * @dev user-significant behavior which depends on that stored value cannot be\\n * @dev manipulated by a subsequent VRF request.\\n *\\n * @dev Similarly, both miners and the VRF oracle itself have some influence\\n * @dev over the order in which VRF responses appear on the blockchain, so if\\n * @dev your contract could have multiple VRF requests in flight simultaneously,\\n * @dev you must ensure that the order in which the VRF responses arrive cannot\\n * @dev be used to manipulate your contract's user-significant behavior.\\n *\\n * @dev Since the block hash of the block which contains the requestRandomness\\n * @dev call is mixed into the input to the VRF *last*, a sufficiently powerful\\n * @dev miner could, in principle, fork the blockchain to evict the block\\n * @dev containing the request, forcing the request to be included in a\\n * @dev different block with a different hash, and therefore a different input\\n * @dev to the VRF. However, such an attack would incur a substantial economic\\n * @dev cost. This cost scales with the number of blocks the VRF oracle waits\\n * @dev until it calls responds to a request. It is for this reason that\\n * @dev that you can signal to an oracle you'd like them to wait longer before\\n * @dev responding to the request (however this is not enforced in the contract\\n * @dev and so remains effective only in the case of unmodified oracle software).\\n */\\nabstract contract VRFConsumerBaseV2 {\\n  error OnlyCoordinatorCanFulfill(address have, address want);\\n  address private immutable vrfCoordinator;\\n\\n  /**\\n   * @param _vrfCoordinator address of VRFCoordinator contract\\n   */\\n  constructor(address _vrfCoordinator) {\\n    vrfCoordinator = _vrfCoordinator;\\n  }\\n\\n  /**\\n   * @notice fulfillRandomness handles the VRF response. Your contract must\\n   * @notice implement it. See \\\"SECURITY CONSIDERATIONS\\\" above for important\\n   * @notice principles to keep in mind when implementing your fulfillRandomness\\n   * @notice method.\\n   *\\n   * @dev VRFConsumerBaseV2 expects its subcontracts to have a method with this\\n   * @dev signature, and will call it once it has verified the proof\\n   * @dev associated with the randomness. (It is triggered via a call to\\n   * @dev rawFulfillRandomness, below.)\\n   *\\n   * @param requestId The Id initially returned by requestRandomness\\n   * @param randomWords the VRF output expanded to the requested number of words\\n   */\\n  function fulfillRandomWords(uint256 requestId, uint256[] memory randomWords) internal virtual;\\n\\n  // rawFulfillRandomness is called by VRFCoordinator when it receives a valid VRF\\n  // proof. rawFulfillRandomness then calls fulfillRandomness, after validating\\n  // the origin of the call\\n  function rawFulfillRandomWords(uint256 requestId, uint256[] memory randomWords) external {\\n    if (msg.sender != vrfCoordinator) {\\n      revert OnlyCoordinatorCanFulfill(msg.sender, vrfCoordinator);\\n    }\\n    fulfillRandomWords(requestId, randomWords);\\n  }\\n}\\n\",\"keccak256\":\"0x3d709a5e0f1f9b8841172b10ba8af785dd51a13eda9fc395723a706e51329904\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"notice":"****************************************************************************Interface for contracts using VRF randomness *****************************************************************************","version":1}}},"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol":{"VRFCoordinatorV2Interface":{"abi":[{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"}],"name":"acceptSubscriptionOwnerTransfer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"},{"internalType":"address","name":"consumer","type":"address"}],"name":"addConsumer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"},{"internalType":"address","name":"to","type":"address"}],"name":"cancelSubscription","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"createSubscription","outputs":[{"internalType":"uint64","name":"subId","type":"uint64"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getRequestConfig","outputs":[{"internalType":"uint16","name":"","type":"uint16"},{"internalType":"uint32","name":"","type":"uint32"},{"internalType":"bytes32[]","name":"","type":"bytes32[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"}],"name":"getSubscription","outputs":[{"internalType":"uint96","name":"balance","type":"uint96"},{"internalType":"uint64","name":"reqCount","type":"uint64"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"address[]","name":"consumers","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"}],"name":"pendingRequestExists","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"},{"internalType":"address","name":"consumer","type":"address"}],"name":"removeConsumer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"keyHash","type":"bytes32"},{"internalType":"uint64","name":"subId","type":"uint64"},{"internalType":"uint16","name":"minimumRequestConfirmations","type":"uint16"},{"internalType":"uint32","name":"callbackGasLimit","type":"uint32"},{"internalType":"uint32","name":"numWords","type":"uint32"}],"name":"requestRandomWords","outputs":[{"internalType":"uint256","name":"requestId","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"},{"internalType":"address","name":"newOwner","type":"address"}],"name":"requestSubscriptionOwnerTransfer","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"acceptSubscriptionOwnerTransfer(uint64)":{"details":"will revert if original owner of subId has not requested that msg.sender become the new owner.","params":{"subId":"- ID of the subscription"}},"addConsumer(uint64,address)":{"params":{"consumer":"- New consumer which can use the subscription","subId":"- ID of the subscription"}},"cancelSubscription(uint64,address)":{"params":{"subId":"- ID of the subscription","to":"- Where to send the remaining LINK to"}},"createSubscription()":{"details":"You can manage the consumer set dynamically with addConsumer/removeConsumer.Note to fund the subscription, use transferAndCall. For exampleLINKTOKEN.transferAndCall(address(COORDINATOR),amount,abi.encode(subId));","returns":{"subId":"- A unique subscription id."}},"getRequestConfig()":{"returns":{"_0":"minimumRequestConfirmations global min for request confirmations","_1":"maxGasLimit global max for request gas limit","_2":"s_provingKeyHashes list of registered key hashes"}},"getSubscription(uint64)":{"params":{"subId":"- ID of the subscription"},"returns":{"balance":"- LINK balance of the subscription in juels.","consumers":"- list of consumer address which are able to use this subscription.","owner":"- owner of the subscription.","reqCount":"- number of requests for this subscription, determines fee tier."}},"removeConsumer(uint64,address)":{"params":{"consumer":"- Consumer to remove from the subscription","subId":"- ID of the subscription"}},"requestRandomWords(bytes32,uint64,uint16,uint32,uint32)":{"params":{"callbackGasLimit":"- How much gas you'd like to receive in your fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords may be slightly less than this amount because of gas used calling the function (argument decoding etc.), so you may need to request slightly more than you expect to have inside fulfillRandomWords. The acceptable range is [0, maxGasLimit]","keyHash":"- Corresponds to a particular oracle job which uses that key for generating the VRF proof. Different keyHash's have different gas price ceilings, so you can select a specific one to bound your maximum per request cost.","minimumRequestConfirmations":"- How many blocks you'd like the oracle to wait before responding to the request. See SECURITY CONSIDERATIONS for why you may want to request more. The acceptable range is [minimumRequestBlockConfirmations, 200].","numWords":"- The number of uint256 random values you'd like to receive in your fulfillRandomWords callback. Note these numbers are expanded in a secure way by the VRFCoordinator from a single random value supplied by the oracle.","subId":"- The ID of the VRF subscription. Must be funded with the minimum subscription balance required for the selected keyHash."},"returns":{"requestId":"- A unique identifier of the request. Can be used to match a request to a response in fulfillRandomWords."}},"requestSubscriptionOwnerTransfer(uint64,address)":{"params":{"newOwner":"- proposed new owner of the subscription","subId":"- ID of the subscription"}}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"acceptSubscriptionOwnerTransfer(uint64)":"82359740","addConsumer(uint64,address)":"7341c10c","cancelSubscription(uint64,address)":"d7ae1d30","createSubscription()":"a21a23e4","getRequestConfig()":"00012291","getSubscription(uint64)":"a47c7696","pendingRequestExists(uint64)":"e82ad7d4","removeConsumer(uint64,address)":"9f87fad7","requestRandomWords(bytes32,uint64,uint16,uint32,uint32)":"5d3b1d30","requestSubscriptionOwnerTransfer(uint64,address)":"04c357cb"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"}],\"name\":\"acceptSubscriptionOwnerTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"consumer\",\"type\":\"address\"}],\"name\":\"addConsumer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"cancelSubscription\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"createSubscription\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRequestConfig\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"},{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"},{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"}],\"name\":\"getSubscription\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"balance\",\"type\":\"uint96\"},{\"internalType\":\"uint64\",\"name\":\"reqCount\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"consumers\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"}],\"name\":\"pendingRequestExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"consumer\",\"type\":\"address\"}],\"name\":\"removeConsumer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"keyHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"uint16\",\"name\":\"minimumRequestConfirmations\",\"type\":\"uint16\"},{\"internalType\":\"uint32\",\"name\":\"callbackGasLimit\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"numWords\",\"type\":\"uint32\"}],\"name\":\"requestRandomWords\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"requestSubscriptionOwnerTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"acceptSubscriptionOwnerTransfer(uint64)\":{\"details\":\"will revert if original owner of subId has not requested that msg.sender become the new owner.\",\"params\":{\"subId\":\"- ID of the subscription\"}},\"addConsumer(uint64,address)\":{\"params\":{\"consumer\":\"- New consumer which can use the subscription\",\"subId\":\"- ID of the subscription\"}},\"cancelSubscription(uint64,address)\":{\"params\":{\"subId\":\"- ID of the subscription\",\"to\":\"- Where to send the remaining LINK to\"}},\"createSubscription()\":{\"details\":\"You can manage the consumer set dynamically with addConsumer/removeConsumer.Note to fund the subscription, use transferAndCall. For exampleLINKTOKEN.transferAndCall(address(COORDINATOR),amount,abi.encode(subId));\",\"returns\":{\"subId\":\"- A unique subscription id.\"}},\"getRequestConfig()\":{\"returns\":{\"_0\":\"minimumRequestConfirmations global min for request confirmations\",\"_1\":\"maxGasLimit global max for request gas limit\",\"_2\":\"s_provingKeyHashes list of registered key hashes\"}},\"getSubscription(uint64)\":{\"params\":{\"subId\":\"- ID of the subscription\"},\"returns\":{\"balance\":\"- LINK balance of the subscription in juels.\",\"consumers\":\"- list of consumer address which are able to use this subscription.\",\"owner\":\"- owner of the subscription.\",\"reqCount\":\"- number of requests for this subscription, determines fee tier.\"}},\"removeConsumer(uint64,address)\":{\"params\":{\"consumer\":\"- Consumer to remove from the subscription\",\"subId\":\"- ID of the subscription\"}},\"requestRandomWords(bytes32,uint64,uint16,uint32,uint32)\":{\"params\":{\"callbackGasLimit\":\"- How much gas you'd like to receive in your fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords may be slightly less than this amount because of gas used calling the function (argument decoding etc.), so you may need to request slightly more than you expect to have inside fulfillRandomWords. The acceptable range is [0, maxGasLimit]\",\"keyHash\":\"- Corresponds to a particular oracle job which uses that key for generating the VRF proof. Different keyHash's have different gas price ceilings, so you can select a specific one to bound your maximum per request cost.\",\"minimumRequestConfirmations\":\"- How many blocks you'd like the oracle to wait before responding to the request. See SECURITY CONSIDERATIONS for why you may want to request more. The acceptable range is [minimumRequestBlockConfirmations, 200].\",\"numWords\":\"- The number of uint256 random values you'd like to receive in your fulfillRandomWords callback. Note these numbers are expanded in a secure way by the VRFCoordinator from a single random value supplied by the oracle.\",\"subId\":\"- The ID of the VRF subscription. Must be funded with the minimum subscription balance required for the selected keyHash.\"},\"returns\":{\"requestId\":\"- A unique identifier of the request. Can be used to match a request to a response in fulfillRandomWords.\"}},\"requestSubscriptionOwnerTransfer(uint64,address)\":{\"params\":{\"newOwner\":\"- proposed new owner of the subscription\",\"subId\":\"- ID of the subscription\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptSubscriptionOwnerTransfer(uint64)\":{\"notice\":\"Request subscription owner transfer.\"},\"addConsumer(uint64,address)\":{\"notice\":\"Add a consumer to a VRF subscription.\"},\"cancelSubscription(uint64,address)\":{\"notice\":\"Cancel a subscription\"},\"createSubscription()\":{\"notice\":\"Create a VRF subscription.\"},\"getRequestConfig()\":{\"notice\":\"Get configuration relevant for making requests\"},\"getSubscription(uint64)\":{\"notice\":\"Get a VRF subscription.\"},\"removeConsumer(uint64,address)\":{\"notice\":\"Remove a consumer from a VRF subscription.\"},\"requestRandomWords(bytes32,uint64,uint16,uint32,uint32)\":{\"notice\":\"Request a set of random words.\"},\"requestSubscriptionOwnerTransfer(uint64,address)\":{\"notice\":\"Request subscription owner transfer.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol\":\"VRFCoordinatorV2Interface\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface VRFCoordinatorV2Interface {\\n  /**\\n   * @notice Get configuration relevant for making requests\\n   * @return minimumRequestConfirmations global min for request confirmations\\n   * @return maxGasLimit global max for request gas limit\\n   * @return s_provingKeyHashes list of registered key hashes\\n   */\\n  function getRequestConfig()\\n    external\\n    view\\n    returns (\\n      uint16,\\n      uint32,\\n      bytes32[] memory\\n    );\\n\\n  /**\\n   * @notice Request a set of random words.\\n   * @param keyHash - Corresponds to a particular oracle job which uses\\n   * that key for generating the VRF proof. Different keyHash's have different gas price\\n   * ceilings, so you can select a specific one to bound your maximum per request cost.\\n   * @param subId  - The ID of the VRF subscription. Must be funded\\n   * with the minimum subscription balance required for the selected keyHash.\\n   * @param minimumRequestConfirmations - How many blocks you'd like the\\n   * oracle to wait before responding to the request. See SECURITY CONSIDERATIONS\\n   * for why you may want to request more. The acceptable range is\\n   * [minimumRequestBlockConfirmations, 200].\\n   * @param callbackGasLimit - How much gas you'd like to receive in your\\n   * fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords\\n   * may be slightly less than this amount because of gas used calling the function\\n   * (argument decoding etc.), so you may need to request slightly more than you expect\\n   * to have inside fulfillRandomWords. The acceptable range is\\n   * [0, maxGasLimit]\\n   * @param numWords - The number of uint256 random values you'd like to receive\\n   * in your fulfillRandomWords callback. Note these numbers are expanded in a\\n   * secure way by the VRFCoordinator from a single random value supplied by the oracle.\\n   * @return requestId - A unique identifier of the request. Can be used to match\\n   * a request to a response in fulfillRandomWords.\\n   */\\n  function requestRandomWords(\\n    bytes32 keyHash,\\n    uint64 subId,\\n    uint16 minimumRequestConfirmations,\\n    uint32 callbackGasLimit,\\n    uint32 numWords\\n  ) external returns (uint256 requestId);\\n\\n  /**\\n   * @notice Create a VRF subscription.\\n   * @return subId - A unique subscription id.\\n   * @dev You can manage the consumer set dynamically with addConsumer/removeConsumer.\\n   * @dev Note to fund the subscription, use transferAndCall. For example\\n   * @dev  LINKTOKEN.transferAndCall(\\n   * @dev    address(COORDINATOR),\\n   * @dev    amount,\\n   * @dev    abi.encode(subId));\\n   */\\n  function createSubscription() external returns (uint64 subId);\\n\\n  /**\\n   * @notice Get a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @return balance - LINK balance of the subscription in juels.\\n   * @return reqCount - number of requests for this subscription, determines fee tier.\\n   * @return owner - owner of the subscription.\\n   * @return consumers - list of consumer address which are able to use this subscription.\\n   */\\n  function getSubscription(uint64 subId)\\n    external\\n    view\\n    returns (\\n      uint96 balance,\\n      uint64 reqCount,\\n      address owner,\\n      address[] memory consumers\\n    );\\n\\n  /**\\n   * @notice Request subscription owner transfer.\\n   * @param subId - ID of the subscription\\n   * @param newOwner - proposed new owner of the subscription\\n   */\\n  function requestSubscriptionOwnerTransfer(uint64 subId, address newOwner) external;\\n\\n  /**\\n   * @notice Request subscription owner transfer.\\n   * @param subId - ID of the subscription\\n   * @dev will revert if original owner of subId has\\n   * not requested that msg.sender become the new owner.\\n   */\\n  function acceptSubscriptionOwnerTransfer(uint64 subId) external;\\n\\n  /**\\n   * @notice Add a consumer to a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @param consumer - New consumer which can use the subscription\\n   */\\n  function addConsumer(uint64 subId, address consumer) external;\\n\\n  /**\\n   * @notice Remove a consumer from a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @param consumer - Consumer to remove from the subscription\\n   */\\n  function removeConsumer(uint64 subId, address consumer) external;\\n\\n  /**\\n   * @notice Cancel a subscription\\n   * @param subId - ID of the subscription\\n   * @param to - Where to send the remaining LINK to\\n   */\\n  function cancelSubscription(uint64 subId, address to) external;\\n\\n  /*\\n   * @notice Check to see if there exists a request commitment consumers\\n   * for all consumers and keyhashes for a given sub.\\n   * @param subId - ID of the subscription\\n   * @return true if there exists at least one unfulfilled request for the subscription, false\\n   * otherwise.\\n   */\\n  function pendingRequestExists(uint64 subId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x54cdc97717cbae1a51a5500c8ee4875ebf056c95b54d2155a9544a79cb4f4494\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"acceptSubscriptionOwnerTransfer(uint64)":{"notice":"Request subscription owner transfer."},"addConsumer(uint64,address)":{"notice":"Add a consumer to a VRF subscription."},"cancelSubscription(uint64,address)":{"notice":"Cancel a subscription"},"createSubscription()":{"notice":"Create a VRF subscription."},"getRequestConfig()":{"notice":"Get configuration relevant for making requests"},"getSubscription(uint64)":{"notice":"Get a VRF subscription."},"removeConsumer(uint64,address)":{"notice":"Remove a consumer from a VRF subscription."},"requestRandomWords(bytes32,uint64,uint16,uint32,uint32)":{"notice":"Request a set of random words."},"requestSubscriptionOwnerTransfer(uint64,address)":{"notice":"Request subscription owner transfer."}},"version":1}}},"contracts/Raffle.sol":{"Raffle":{"abi":[{"inputs":[{"internalType":"address","name":"vrfCoordinatorV2","type":"address"},{"internalType":"uint64","name":"subscriptionId","type":"uint64"},{"internalType":"bytes32","name":"gasLane","type":"bytes32"},{"internalType":"uint256","name":"interval","type":"uint256"},{"internalType":"uint256","name":"entranceFee","type":"uint256"},{"internalType":"uint32","name":"callbackGasLimit","type":"uint32"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"have","type":"address"},{"internalType":"address","name":"want","type":"address"}],"name":"OnlyCoordinatorCanFulfill","type":"error"},{"inputs":[],"name":"Raffle__SendMoreToEnterRaffle","type":"error"},{"inputs":[],"name":"Raffle__TransferFailed","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"player","type":"address"}],"name":"RaffleEnter","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"requestId","type":"uint256"},{"indexed":false,"internalType":"uint256[]","name":"randomWords","type":"uint256[]"}],"name":"RequestFulfilled","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"requestId","type":"uint256"},{"indexed":false,"internalType":"uint32","name":"numWords","type":"uint32"}],"name":"RequestSent","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"requestId","type":"uint256"}],"name":"RequestedRaffleWinner","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"requestId","type":"address"}],"name":"WinnerPicked","type":"event"},{"inputs":[],"name":"enterRaffle","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"getPlayer","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getRecentWinner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"requestId","type":"uint256"},{"internalType":"uint256[]","name":"randomWords","type":"uint256[]"}],"name":"rawFulfillRandomWords","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"requestRandomWords","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_21":{"entryPoint":null,"id":21,"parameterSlots":1,"returnSlots":0},"@_275":{"entryPoint":null,"id":275,"parameterSlots":6,"returnSlots":0},"abi_decode_t_address_fromMemory":{"entryPoint":385,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32_fromMemory":{"entryPoint":513,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":572,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint32_fromMemory":{"entryPoint":637,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint64_fromMemory":{"entryPoint":454,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_uint64t_bytes32t_uint256t_uint256t_uint32_fromMemory":{"entryPoint":660,"id":null,"parameterSlots":2,"returnSlots":6},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"cleanup_t_address":{"entryPoint":339,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":477,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":307,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":536,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint32":{"entryPoint":595,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint64":{"entryPoint":408,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x21":{"entryPoint":816,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":302,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_t_address":{"entryPoint":359,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":487,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":546,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint32":{"entryPoint":611,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint64":{"entryPoint":428,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:3636:3","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:3","statements":[{"nodeType":"YulAssignment","src":"57:19:3","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:3","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:3"},"nodeType":"YulFunctionCall","src":"67:9:3"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:3"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:3","type":""}],"src":"7:75:3"},{"body":{"nodeType":"YulBlock","src":"177:28:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:3","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:3"},"nodeType":"YulFunctionCall","src":"187:12:3"},"nodeType":"YulExpressionStatement","src":"187:12:3"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:3"},{"body":{"nodeType":"YulBlock","src":"300:28:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:3","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:3"},"nodeType":"YulFunctionCall","src":"310:12:3"},"nodeType":"YulExpressionStatement","src":"310:12:3"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:3"},{"body":{"nodeType":"YulBlock","src":"379:81:3","statements":[{"nodeType":"YulAssignment","src":"389:65:3","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"404:5:3"},{"kind":"number","nodeType":"YulLiteral","src":"411:42:3","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"400:3:3"},"nodeType":"YulFunctionCall","src":"400:54:3"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:3"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:3","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:3","type":""}],"src":"334:126:3"},{"body":{"nodeType":"YulBlock","src":"511:51:3","statements":[{"nodeType":"YulAssignment","src":"521:35:3","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:3"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"532:17:3"},"nodeType":"YulFunctionCall","src":"532:24:3"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"521:7:3"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"493:5:3","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"503:7:3","type":""}],"src":"466:96:3"},{"body":{"nodeType":"YulBlock","src":"611:79:3","statements":[{"body":{"nodeType":"YulBlock","src":"668:16:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"677:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"680:1:3","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"670:6:3"},"nodeType":"YulFunctionCall","src":"670:12:3"},"nodeType":"YulExpressionStatement","src":"670:12:3"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"634:5:3"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"659:5:3"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"641:17:3"},"nodeType":"YulFunctionCall","src":"641:24:3"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"631:2:3"},"nodeType":"YulFunctionCall","src":"631:35:3"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"624:6:3"},"nodeType":"YulFunctionCall","src":"624:43:3"},"nodeType":"YulIf","src":"621:63:3"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"604:5:3","type":""}],"src":"568:122:3"},{"body":{"nodeType":"YulBlock","src":"759:80:3","statements":[{"nodeType":"YulAssignment","src":"769:22:3","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"784:6:3"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"778:5:3"},"nodeType":"YulFunctionCall","src":"778:13:3"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"769:5:3"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"827:5:3"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"800:26:3"},"nodeType":"YulFunctionCall","src":"800:33:3"},"nodeType":"YulExpressionStatement","src":"800:33:3"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"737:6:3","type":""},{"name":"end","nodeType":"YulTypedName","src":"745:3:3","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"753:5:3","type":""}],"src":"696:143:3"},{"body":{"nodeType":"YulBlock","src":"889:57:3","statements":[{"nodeType":"YulAssignment","src":"899:41:3","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"914:5:3"},{"kind":"number","nodeType":"YulLiteral","src":"921:18:3","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"910:3:3"},"nodeType":"YulFunctionCall","src":"910:30:3"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"899:7:3"}]}]},"name":"cleanup_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"871:5:3","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"881:7:3","type":""}],"src":"845:101:3"},{"body":{"nodeType":"YulBlock","src":"994:78:3","statements":[{"body":{"nodeType":"YulBlock","src":"1050:16:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1059:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1062:1:3","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1052:6:3"},"nodeType":"YulFunctionCall","src":"1052:12:3"},"nodeType":"YulExpressionStatement","src":"1052:12:3"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1017:5:3"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1041:5:3"}],"functionName":{"name":"cleanup_t_uint64","nodeType":"YulIdentifier","src":"1024:16:3"},"nodeType":"YulFunctionCall","src":"1024:23:3"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1014:2:3"},"nodeType":"YulFunctionCall","src":"1014:34:3"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1007:6:3"},"nodeType":"YulFunctionCall","src":"1007:42:3"},"nodeType":"YulIf","src":"1004:62:3"}]},"name":"validator_revert_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"987:5:3","type":""}],"src":"952:120:3"},{"body":{"nodeType":"YulBlock","src":"1140:79:3","statements":[{"nodeType":"YulAssignment","src":"1150:22:3","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1165:6:3"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1159:5:3"},"nodeType":"YulFunctionCall","src":"1159:13:3"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1150:5:3"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1207:5:3"}],"functionName":{"name":"validator_revert_t_uint64","nodeType":"YulIdentifier","src":"1181:25:3"},"nodeType":"YulFunctionCall","src":"1181:32:3"},"nodeType":"YulExpressionStatement","src":"1181:32:3"}]},"name":"abi_decode_t_uint64_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1118:6:3","type":""},{"name":"end","nodeType":"YulTypedName","src":"1126:3:3","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1134:5:3","type":""}],"src":"1078:141:3"},{"body":{"nodeType":"YulBlock","src":"1270:32:3","statements":[{"nodeType":"YulAssignment","src":"1280:16:3","value":{"name":"value","nodeType":"YulIdentifier","src":"1291:5:3"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1280:7:3"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1252:5:3","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1262:7:3","type":""}],"src":"1225:77:3"},{"body":{"nodeType":"YulBlock","src":"1351:79:3","statements":[{"body":{"nodeType":"YulBlock","src":"1408:16:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1417:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1420:1:3","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1410:6:3"},"nodeType":"YulFunctionCall","src":"1410:12:3"},"nodeType":"YulExpressionStatement","src":"1410:12:3"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1374:5:3"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1399:5:3"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"1381:17:3"},"nodeType":"YulFunctionCall","src":"1381:24:3"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1371:2:3"},"nodeType":"YulFunctionCall","src":"1371:35:3"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1364:6:3"},"nodeType":"YulFunctionCall","src":"1364:43:3"},"nodeType":"YulIf","src":"1361:63:3"}]},"name":"validator_revert_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1344:5:3","type":""}],"src":"1308:122:3"},{"body":{"nodeType":"YulBlock","src":"1499:80:3","statements":[{"nodeType":"YulAssignment","src":"1509:22:3","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1524:6:3"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1518:5:3"},"nodeType":"YulFunctionCall","src":"1518:13:3"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1509:5:3"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1567:5:3"}],"functionName":{"name":"validator_revert_t_bytes32","nodeType":"YulIdentifier","src":"1540:26:3"},"nodeType":"YulFunctionCall","src":"1540:33:3"},"nodeType":"YulExpressionStatement","src":"1540:33:3"}]},"name":"abi_decode_t_bytes32_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1477:6:3","type":""},{"name":"end","nodeType":"YulTypedName","src":"1485:3:3","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1493:5:3","type":""}],"src":"1436:143:3"},{"body":{"nodeType":"YulBlock","src":"1630:32:3","statements":[{"nodeType":"YulAssignment","src":"1640:16:3","value":{"name":"value","nodeType":"YulIdentifier","src":"1651:5:3"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1640:7:3"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1612:5:3","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1622:7:3","type":""}],"src":"1585:77:3"},{"body":{"nodeType":"YulBlock","src":"1711:79:3","statements":[{"body":{"nodeType":"YulBlock","src":"1768:16:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1777:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1780:1:3","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1770:6:3"},"nodeType":"YulFunctionCall","src":"1770:12:3"},"nodeType":"YulExpressionStatement","src":"1770:12:3"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1734:5:3"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1759:5:3"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1741:17:3"},"nodeType":"YulFunctionCall","src":"1741:24:3"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1731:2:3"},"nodeType":"YulFunctionCall","src":"1731:35:3"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1724:6:3"},"nodeType":"YulFunctionCall","src":"1724:43:3"},"nodeType":"YulIf","src":"1721:63:3"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1704:5:3","type":""}],"src":"1668:122:3"},{"body":{"nodeType":"YulBlock","src":"1859:80:3","statements":[{"nodeType":"YulAssignment","src":"1869:22:3","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1884:6:3"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1878:5:3"},"nodeType":"YulFunctionCall","src":"1878:13:3"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1869:5:3"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1927:5:3"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"1900:26:3"},"nodeType":"YulFunctionCall","src":"1900:33:3"},"nodeType":"YulExpressionStatement","src":"1900:33:3"}]},"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1837:6:3","type":""},{"name":"end","nodeType":"YulTypedName","src":"1845:3:3","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1853:5:3","type":""}],"src":"1796:143:3"},{"body":{"nodeType":"YulBlock","src":"1989:49:3","statements":[{"nodeType":"YulAssignment","src":"1999:33:3","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2014:5:3"},{"kind":"number","nodeType":"YulLiteral","src":"2021:10:3","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2010:3:3"},"nodeType":"YulFunctionCall","src":"2010:22:3"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1999:7:3"}]}]},"name":"cleanup_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1971:5:3","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1981:7:3","type":""}],"src":"1945:93:3"},{"body":{"nodeType":"YulBlock","src":"2086:78:3","statements":[{"body":{"nodeType":"YulBlock","src":"2142:16:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2151:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2154:1:3","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2144:6:3"},"nodeType":"YulFunctionCall","src":"2144:12:3"},"nodeType":"YulExpressionStatement","src":"2144:12:3"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2109:5:3"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2133:5:3"}],"functionName":{"name":"cleanup_t_uint32","nodeType":"YulIdentifier","src":"2116:16:3"},"nodeType":"YulFunctionCall","src":"2116:23:3"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2106:2:3"},"nodeType":"YulFunctionCall","src":"2106:34:3"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2099:6:3"},"nodeType":"YulFunctionCall","src":"2099:42:3"},"nodeType":"YulIf","src":"2096:62:3"}]},"name":"validator_revert_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2079:5:3","type":""}],"src":"2044:120:3"},{"body":{"nodeType":"YulBlock","src":"2232:79:3","statements":[{"nodeType":"YulAssignment","src":"2242:22:3","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2257:6:3"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2251:5:3"},"nodeType":"YulFunctionCall","src":"2251:13:3"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2242:5:3"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2299:5:3"}],"functionName":{"name":"validator_revert_t_uint32","nodeType":"YulIdentifier","src":"2273:25:3"},"nodeType":"YulFunctionCall","src":"2273:32:3"},"nodeType":"YulExpressionStatement","src":"2273:32:3"}]},"name":"abi_decode_t_uint32_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2210:6:3","type":""},{"name":"end","nodeType":"YulTypedName","src":"2218:3:3","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2226:5:3","type":""}],"src":"2170:141:3"},{"body":{"nodeType":"YulBlock","src":"2477:970:3","statements":[{"body":{"nodeType":"YulBlock","src":"2524:83:3","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2526:77:3"},"nodeType":"YulFunctionCall","src":"2526:79:3"},"nodeType":"YulExpressionStatement","src":"2526:79:3"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2498:7:3"},{"name":"headStart","nodeType":"YulIdentifier","src":"2507:9:3"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2494:3:3"},"nodeType":"YulFunctionCall","src":"2494:23:3"},{"kind":"number","nodeType":"YulLiteral","src":"2519:3:3","type":"","value":"192"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2490:3:3"},"nodeType":"YulFunctionCall","src":"2490:33:3"},"nodeType":"YulIf","src":"2487:120:3"},{"nodeType":"YulBlock","src":"2617:128:3","statements":[{"nodeType":"YulVariableDeclaration","src":"2632:15:3","value":{"kind":"number","nodeType":"YulLiteral","src":"2646:1:3","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2636:6:3","type":""}]},{"nodeType":"YulAssignment","src":"2661:74:3","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2707:9:3"},{"name":"offset","nodeType":"YulIdentifier","src":"2718:6:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2703:3:3"},"nodeType":"YulFunctionCall","src":"2703:22:3"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2727:7:3"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"2671:31:3"},"nodeType":"YulFunctionCall","src":"2671:64:3"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2661:6:3"}]}]},{"nodeType":"YulBlock","src":"2755:128:3","statements":[{"nodeType":"YulVariableDeclaration","src":"2770:16:3","value":{"kind":"number","nodeType":"YulLiteral","src":"2784:2:3","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2774:6:3","type":""}]},{"nodeType":"YulAssignment","src":"2800:73:3","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2845:9:3"},{"name":"offset","nodeType":"YulIdentifier","src":"2856:6:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2841:3:3"},"nodeType":"YulFunctionCall","src":"2841:22:3"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2865:7:3"}],"functionName":{"name":"abi_decode_t_uint64_fromMemory","nodeType":"YulIdentifier","src":"2810:30:3"},"nodeType":"YulFunctionCall","src":"2810:63:3"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2800:6:3"}]}]},{"nodeType":"YulBlock","src":"2893:129:3","statements":[{"nodeType":"YulVariableDeclaration","src":"2908:16:3","value":{"kind":"number","nodeType":"YulLiteral","src":"2922:2:3","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2912:6:3","type":""}]},{"nodeType":"YulAssignment","src":"2938:74:3","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2984:9:3"},{"name":"offset","nodeType":"YulIdentifier","src":"2995:6:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2980:3:3"},"nodeType":"YulFunctionCall","src":"2980:22:3"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3004:7:3"}],"functionName":{"name":"abi_decode_t_bytes32_fromMemory","nodeType":"YulIdentifier","src":"2948:31:3"},"nodeType":"YulFunctionCall","src":"2948:64:3"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"2938:6:3"}]}]},{"nodeType":"YulBlock","src":"3032:129:3","statements":[{"nodeType":"YulVariableDeclaration","src":"3047:16:3","value":{"kind":"number","nodeType":"YulLiteral","src":"3061:2:3","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3051:6:3","type":""}]},{"nodeType":"YulAssignment","src":"3077:74:3","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3123:9:3"},{"name":"offset","nodeType":"YulIdentifier","src":"3134:6:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3119:3:3"},"nodeType":"YulFunctionCall","src":"3119:22:3"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3143:7:3"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"3087:31:3"},"nodeType":"YulFunctionCall","src":"3087:64:3"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"3077:6:3"}]}]},{"nodeType":"YulBlock","src":"3171:130:3","statements":[{"nodeType":"YulVariableDeclaration","src":"3186:17:3","value":{"kind":"number","nodeType":"YulLiteral","src":"3200:3:3","type":"","value":"128"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3190:6:3","type":""}]},{"nodeType":"YulAssignment","src":"3217:74:3","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3263:9:3"},{"name":"offset","nodeType":"YulIdentifier","src":"3274:6:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3259:3:3"},"nodeType":"YulFunctionCall","src":"3259:22:3"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3283:7:3"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"3227:31:3"},"nodeType":"YulFunctionCall","src":"3227:64:3"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"3217:6:3"}]}]},{"nodeType":"YulBlock","src":"3311:129:3","statements":[{"nodeType":"YulVariableDeclaration","src":"3326:17:3","value":{"kind":"number","nodeType":"YulLiteral","src":"3340:3:3","type":"","value":"160"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3330:6:3","type":""}]},{"nodeType":"YulAssignment","src":"3357:73:3","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3402:9:3"},{"name":"offset","nodeType":"YulIdentifier","src":"3413:6:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3398:3:3"},"nodeType":"YulFunctionCall","src":"3398:22:3"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3422:7:3"}],"functionName":{"name":"abi_decode_t_uint32_fromMemory","nodeType":"YulIdentifier","src":"3367:30:3"},"nodeType":"YulFunctionCall","src":"3367:63:3"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"3357:6:3"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint64t_bytes32t_uint256t_uint256t_uint32_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2407:9:3","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2418:7:3","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2430:6:3","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2438:6:3","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2446:6:3","type":""},{"name":"value3","nodeType":"YulTypedName","src":"2454:6:3","type":""},{"name":"value4","nodeType":"YulTypedName","src":"2462:6:3","type":""},{"name":"value5","nodeType":"YulTypedName","src":"2470:6:3","type":""}],"src":"2317:1130:3"},{"body":{"nodeType":"YulBlock","src":"3481:152:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3498:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3501:77:3","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3491:6:3"},"nodeType":"YulFunctionCall","src":"3491:88:3"},"nodeType":"YulExpressionStatement","src":"3491:88:3"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3595:1:3","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3598:4:3","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3588:6:3"},"nodeType":"YulFunctionCall","src":"3588:15:3"},"nodeType":"YulExpressionStatement","src":"3588:15:3"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3619:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3622:4:3","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3612:6:3"},"nodeType":"YulFunctionCall","src":"3612:15:3"},"nodeType":"YulExpressionStatement","src":"3612:15:3"}]},"name":"panic_error_0x21","nodeType":"YulFunctionDefinition","src":"3453:180:3"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function validator_revert_t_uint64(value) {\n        if iszero(eq(value, cleanup_t_uint64(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint64_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint64(value)\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function cleanup_t_uint32(value) -> cleaned {\n        cleaned := and(value, 0xffffffff)\n    }\n\n    function validator_revert_t_uint32(value) {\n        if iszero(eq(value, cleanup_t_uint32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint32_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint32(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint64t_bytes32t_uint256t_uint256t_uint32_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5 {\n        if slt(sub(dataEnd, headStart), 192) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint64_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_bytes32_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_uint32_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n}\n","id":3,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"","opcodes":"PUSH2 0x160 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xFFF CODESIZE SUB DUP1 PUSH3 0xFFF DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x38 SWAP2 SWAP1 PUSH3 0x294 JUMP JUMPDEST DUP6 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x140 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP4 PUSH1 0xC0 DUP2 DUP2 MSTORE POP POP DUP3 PUSH2 0x100 DUP2 DUP2 MSTORE POP POP DUP5 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0xA0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP2 PUSH2 0x120 DUP2 DUP2 MSTORE POP POP PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH3 0x102 JUMPI PUSH3 0x101 PUSH3 0x330 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0x0 DUP2 SWAP1 SSTORE POP DUP1 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 DUP2 PUSH4 0xFFFFFFFF AND DUP2 MSTORE POP POP POP POP POP POP POP POP PUSH3 0x35F JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x160 DUP3 PUSH3 0x133 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x172 DUP2 PUSH3 0x153 JUMP JUMPDEST DUP2 EQ PUSH3 0x17E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x192 DUP2 PUSH3 0x167 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x1B7 DUP2 PUSH3 0x198 JUMP JUMPDEST DUP2 EQ PUSH3 0x1C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x1D7 DUP2 PUSH3 0x1AC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x1F2 DUP2 PUSH3 0x1DD JUMP JUMPDEST DUP2 EQ PUSH3 0x1FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x212 DUP2 PUSH3 0x1E7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x22D DUP2 PUSH3 0x218 JUMP JUMPDEST DUP2 EQ PUSH3 0x239 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x24D DUP2 PUSH3 0x222 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x26E DUP2 PUSH3 0x253 JUMP JUMPDEST DUP2 EQ PUSH3 0x27A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x28E DUP2 PUSH3 0x263 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH3 0x2B4 JUMPI PUSH3 0x2B3 PUSH3 0x12E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x2C4 DUP10 DUP3 DUP11 ADD PUSH3 0x181 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH3 0x2D7 DUP10 DUP3 DUP11 ADD PUSH3 0x1C6 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 PUSH3 0x2EA DUP10 DUP3 DUP11 ADD PUSH3 0x201 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH3 0x2FD DUP10 DUP3 DUP11 ADD PUSH3 0x23C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 PUSH3 0x310 DUP10 DUP3 DUP11 ADD PUSH3 0x23C JUMP JUMPDEST SWAP3 POP POP PUSH1 0xA0 PUSH3 0x323 DUP10 DUP3 DUP11 ADD PUSH3 0x27D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD PUSH2 0x120 MLOAD PUSH2 0x140 MLOAD PUSH2 0xC41 PUSH3 0x3BE PUSH1 0x0 CODECOPY PUSH1 0x0 PUSH2 0x2F1 ADD MSTORE PUSH1 0x0 PUSH2 0x1C3 ADD MSTORE PUSH1 0x0 POP POP PUSH1 0x0 PUSH2 0x371 ADD MSTORE PUSH1 0x0 PUSH2 0x32D ADD MSTORE PUSH1 0x0 PUSH2 0x34E ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x103 ADD MSTORE PUSH2 0x157 ADD MSTORE PUSH2 0xC41 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FE543E3 EQ PUSH2 0x4F JUMPI DUP1 PUSH4 0x2CFCC539 EQ PUSH2 0x78 JUMPI DUP1 PUSH4 0x473F1DDC EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0xE0C86289 EQ PUSH2 0xAD JUMPI DUP1 PUSH4 0xE55AE4E8 EQ PUSH2 0xC4 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x76 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x71 SWAP2 SWAP1 PUSH2 0x8EC JUMP JUMPDEST PUSH2 0x101 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x80 PUSH2 0x1C1 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x97 PUSH2 0x2C3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA4 SWAP2 SWAP1 PUSH2 0x989 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC2 PUSH2 0x2ED JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xEB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE6 SWAP2 SWAP1 PUSH2 0x9A4 JUMP JUMPDEST PUSH2 0x427 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF8 SWAP2 SWAP1 PUSH2 0x989 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1B3 JUMPI CALLER PUSH32 0x0 PUSH1 0x40 MLOAD PUSH32 0x1CF993F400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AA SWAP3 SWAP2 SWAP1 PUSH2 0x9D1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1BD DUP3 DUP3 PUSH2 0x46F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH32 0x0 CALLVALUE LT ISZERO PUSH2 0x21B JUMPI PUSH1 0x40 MLOAD PUSH32 0x3038C00A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 CALLER SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x805E1D667BDDB8A95F0F09880CF94F403FB596CE79928D9F29B74203BA284D4 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x5D3B1D30 PUSH32 0x0 PUSH32 0x0 PUSH1 0x3 PUSH32 0x0 PUSH1 0x1 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B2 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xA72 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3D1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3F5 SWAP2 SWAP1 PUSH2 0xADA JUMP JUMPDEST SWAP1 POP DUP1 PUSH32 0xCD6E45C8998311CAB7E9D4385596CAC867E20A0587194B954FA3A731C93CE78B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x43D JUMPI PUSH2 0x43C PUSH2 0xB07 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP1 SLOAD SWAP1 POP DUP3 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x48B JUMPI PUSH2 0x48A PUSH2 0xB07 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x49D SWAP2 SWAP1 PUSH2 0xB65 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x2 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x4B5 JUMPI PUSH2 0x4B4 PUSH2 0xB07 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x53E JUMPI PUSH2 0x53D PUSH2 0x7A9 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x56C JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH1 0x2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x582 SWAP3 SWAP2 SWAP1 PUSH2 0x6A2 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x5A9 JUMPI PUSH2 0x5A8 PUSH2 0xB96 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFBALANCE PUSH1 0x40 MLOAD PUSH2 0x5DB SWAP1 PUSH2 0xBF6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x618 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x61D JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x658 JUMPI PUSH1 0x40 MLOAD PUSH32 0xA1D04B3900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x5B690EC4A06FE979403046EAEEA5B3CE38524683C3001F662C8B5A829632F7DF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x71B JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x71A JUMPI DUP3 MLOAD DUP3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x6C2 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x728 SWAP2 SWAP1 PUSH2 0x72C JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x745 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x72D JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x770 DUP2 PUSH2 0x75D JUMP JUMPDEST DUP2 EQ PUSH2 0x77B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x78D DUP2 PUSH2 0x767 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x7E1 DUP3 PUSH2 0x798 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x800 JUMPI PUSH2 0x7FF PUSH2 0x7A9 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x813 PUSH2 0x749 JUMP JUMPDEST SWAP1 POP PUSH2 0x81F DUP3 DUP3 PUSH2 0x7D8 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x83F JUMPI PUSH2 0x83E PUSH2 0x7A9 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x868 PUSH2 0x863 DUP5 PUSH2 0x824 JUMP JUMPDEST PUSH2 0x809 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x88B JUMPI PUSH2 0x88A PUSH2 0x850 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x8B4 JUMPI DUP1 PUSH2 0x8A0 DUP9 DUP3 PUSH2 0x77E JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x88D JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x8D3 JUMPI PUSH2 0x8D2 PUSH2 0x793 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x8E3 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x855 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x903 JUMPI PUSH2 0x902 PUSH2 0x753 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x911 DUP6 DUP3 DUP7 ADD PUSH2 0x77E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x932 JUMPI PUSH2 0x931 PUSH2 0x758 JUMP JUMPDEST JUMPDEST PUSH2 0x93E DUP6 DUP3 DUP7 ADD PUSH2 0x8BE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x973 DUP3 PUSH2 0x948 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x983 DUP2 PUSH2 0x968 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x99E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x97A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9BA JUMPI PUSH2 0x9B9 PUSH2 0x753 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x9C8 DUP5 DUP3 DUP6 ADD PUSH2 0x77E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x9E6 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x97A JUMP JUMPDEST PUSH2 0x9F3 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x97A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA0D DUP2 PUSH2 0x9FA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA30 DUP2 PUSH2 0xA13 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA4D DUP2 PUSH2 0xA36 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA6C DUP2 PUSH2 0xA53 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0xA87 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0xA04 JUMP JUMPDEST PUSH2 0xA94 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0xA27 JUMP JUMPDEST PUSH2 0xAA1 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0xA44 JUMP JUMPDEST PUSH2 0xAAE PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0xA63 JUMP JUMPDEST PUSH2 0xABB PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0xA63 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xAD4 DUP2 PUSH2 0x767 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAF0 JUMPI PUSH2 0xAEF PUSH2 0x753 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xAFE DUP5 DUP3 DUP6 ADD PUSH2 0xAC5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xB70 DUP3 PUSH2 0x75D JUMP JUMPDEST SWAP2 POP PUSH2 0xB7B DUP4 PUSH2 0x75D JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xB8B JUMPI PUSH2 0xB8A PUSH2 0xB36 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBE0 PUSH1 0x0 DUP4 PUSH2 0xBC5 JUMP JUMPDEST SWAP2 POP PUSH2 0xBEB DUP3 PUSH2 0xBD0 JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC01 DUP3 PUSH2 0xBD3 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF6 0xFC SAR PUSH4 0x13801120 0x5E 0xF8 0x29 0xCE SWAP6 SMOD 0x2D 0xE7 DUP12 0xCF 0xE5 SAR MSTORE8 0xD8 0x5D STOP 0xE2 0x2F 0xD2 0xB4 DUP16 0xAA 0xF9 0xBE PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"291:2872:2:-:0;;;1253:534;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1452:16;5616:15:0;5599:32;;;;;;;;;;5556:80;1521:16:2::1;1476:62;;;;;;;;::::0;::::1;1556:7;1544:19;;;;::::0;::::1;1582:8;1569:21;;;;::::0;::::1;1615:14;1596:33;;;;;;;;::::0;::::1;1651:11;1635:27;;;;::::0;::::1;1684:16;1668:13;;:32;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;1724:15;1706;:33;;;;1766:16;1745:37;;;;;;;;::::0;::::1;1253:534:::0;;;;;;291:2872;;88:117:3;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:101::-;881:7;921:18;914:5;910:30;899:41;;845:101;;;:::o;952:120::-;1024:23;1041:5;1024:23;:::i;:::-;1017:5;1014:34;1004:62;;1062:1;1059;1052:12;1004:62;952:120;:::o;1078:141::-;1134:5;1165:6;1159:13;1150:22;;1181:32;1207:5;1181:32;:::i;:::-;1078:141;;;;:::o;1225:77::-;1262:7;1291:5;1280:16;;1225:77;;;:::o;1308:122::-;1381:24;1399:5;1381:24;:::i;:::-;1374:5;1371:35;1361:63;;1420:1;1417;1410:12;1361:63;1308:122;:::o;1436:143::-;1493:5;1524:6;1518:13;1509:22;;1540:33;1567:5;1540:33;:::i;:::-;1436:143;;;;:::o;1585:77::-;1622:7;1651:5;1640:16;;1585:77;;;:::o;1668:122::-;1741:24;1759:5;1741:24;:::i;:::-;1734:5;1731:35;1721:63;;1780:1;1777;1770:12;1721:63;1668:122;:::o;1796:143::-;1853:5;1884:6;1878:13;1869:22;;1900:33;1927:5;1900:33;:::i;:::-;1796:143;;;;:::o;1945:93::-;1981:7;2021:10;2014:5;2010:22;1999:33;;1945:93;;;:::o;2044:120::-;2116:23;2133:5;2116:23;:::i;:::-;2109:5;2106:34;2096:62;;2154:1;2151;2144:12;2096:62;2044:120;:::o;2170:141::-;2226:5;2257:6;2251:13;2242:22;;2273:32;2299:5;2273:32;:::i;:::-;2170:141;;;;:::o;2317:1130::-;2430:6;2438;2446;2454;2462;2470;2519:3;2507:9;2498:7;2494:23;2490:33;2487:120;;;2526:79;;:::i;:::-;2487:120;2646:1;2671:64;2727:7;2718:6;2707:9;2703:22;2671:64;:::i;:::-;2661:74;;2617:128;2784:2;2810:63;2865:7;2856:6;2845:9;2841:22;2810:63;:::i;:::-;2800:73;;2755:128;2922:2;2948:64;3004:7;2995:6;2984:9;2980:22;2948:64;:::i;:::-;2938:74;;2893:129;3061:2;3087:64;3143:7;3134:6;3123:9;3119:22;3087:64;:::i;:::-;3077:74;;3032:129;3200:3;3227:64;3283:7;3274:6;3263:9;3259:22;3227:64;:::i;:::-;3217:74;;3171:130;3340:3;3367:63;3422:7;3413:6;3402:9;3398:22;3367:63;:::i;:::-;3357:73;;3311:129;2317:1130;;;;;;;;:::o;3453:180::-;3501:77;3498:1;3491:88;3598:4;3595:1;3588:15;3622:4;3619:1;3612:15;291:2872:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@enterRaffle_304":{"entryPoint":449,"id":304,"parameterSlots":0,"returnSlots":0},"@fulfillRandomWords_394":{"entryPoint":1135,"id":394,"parameterSlots":2,"returnSlots":0},"@getPlayer_406":{"entryPoint":1063,"id":406,"parameterSlots":1,"returnSlots":1},"@getRecentWinner_414":{"entryPoint":707,"id":414,"parameterSlots":0,"returnSlots":1},"@rawFulfillRandomWords_56":{"entryPoint":257,"id":56,"parameterSlots":2,"returnSlots":0},"@requestRandomWords_323":{"entryPoint":749,"id":323,"parameterSlots":0,"returnSlots":0},"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":2133,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":2238,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":1918,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":2757,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":2468,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":2778,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":2284,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":2426,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":2564,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":3027,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint16_to_t_uint16_fromStack":{"entryPoint":2628,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint32_to_t_uint32_fromStack":{"entryPoint":2659,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint64_to_t_uint64_fromStack":{"entryPoint":2599,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":3062,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":2441,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed":{"entryPoint":2513,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint64_t_uint16_t_uint32_t_uint32__to_t_bytes32_t_uint64_t_uint16_t_uint32_t_uint32__fromStack_reversed":{"entryPoint":2674,"id":null,"parameterSlots":6,"returnSlots":1},"allocate_memory":{"entryPoint":2057,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":1865,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":2084,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":3013,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":2408,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":2554,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint16":{"entryPoint":2614,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":2376,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":1885,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint32":{"entryPoint":2643,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint64":{"entryPoint":2579,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":2008,"id":null,"parameterSlots":2,"returnSlots":0},"mod_t_uint256":{"entryPoint":2917,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x12":{"entryPoint":2870,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x21":{"entryPoint":2966,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":2823,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":1961,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":1939,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":2128,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":1880,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":1875,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":1944,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470":{"entryPoint":3024,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":1895,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:8874:3","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:3","statements":[{"nodeType":"YulAssignment","src":"57:19:3","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:3","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:3"},"nodeType":"YulFunctionCall","src":"67:9:3"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:3"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:3","type":""}],"src":"7:75:3"},{"body":{"nodeType":"YulBlock","src":"177:28:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:3","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:3"},"nodeType":"YulFunctionCall","src":"187:12:3"},"nodeType":"YulExpressionStatement","src":"187:12:3"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:3"},{"body":{"nodeType":"YulBlock","src":"300:28:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:3","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:3"},"nodeType":"YulFunctionCall","src":"310:12:3"},"nodeType":"YulExpressionStatement","src":"310:12:3"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:3"},{"body":{"nodeType":"YulBlock","src":"379:32:3","statements":[{"nodeType":"YulAssignment","src":"389:16:3","value":{"name":"value","nodeType":"YulIdentifier","src":"400:5:3"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:3"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:3","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:3","type":""}],"src":"334:77:3"},{"body":{"nodeType":"YulBlock","src":"460:79:3","statements":[{"body":{"nodeType":"YulBlock","src":"517:16:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"526:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"529:1:3","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"519:6:3"},"nodeType":"YulFunctionCall","src":"519:12:3"},"nodeType":"YulExpressionStatement","src":"519:12:3"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"483:5:3"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"508:5:3"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"490:17:3"},"nodeType":"YulFunctionCall","src":"490:24:3"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"480:2:3"},"nodeType":"YulFunctionCall","src":"480:35:3"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"473:6:3"},"nodeType":"YulFunctionCall","src":"473:43:3"},"nodeType":"YulIf","src":"470:63:3"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"453:5:3","type":""}],"src":"417:122:3"},{"body":{"nodeType":"YulBlock","src":"597:87:3","statements":[{"nodeType":"YulAssignment","src":"607:29:3","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"629:6:3"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"616:12:3"},"nodeType":"YulFunctionCall","src":"616:20:3"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"607:5:3"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"672:5:3"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"645:26:3"},"nodeType":"YulFunctionCall","src":"645:33:3"},"nodeType":"YulExpressionStatement","src":"645:33:3"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"575:6:3","type":""},{"name":"end","nodeType":"YulTypedName","src":"583:3:3","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"591:5:3","type":""}],"src":"545:139:3"},{"body":{"nodeType":"YulBlock","src":"779:28:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"796:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"799:1:3","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"789:6:3"},"nodeType":"YulFunctionCall","src":"789:12:3"},"nodeType":"YulExpressionStatement","src":"789:12:3"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"690:117:3"},{"body":{"nodeType":"YulBlock","src":"861:54:3","statements":[{"nodeType":"YulAssignment","src":"871:38:3","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"889:5:3"},{"kind":"number","nodeType":"YulLiteral","src":"896:2:3","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"885:3:3"},"nodeType":"YulFunctionCall","src":"885:14:3"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"905:2:3","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"901:3:3"},"nodeType":"YulFunctionCall","src":"901:7:3"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"881:3:3"},"nodeType":"YulFunctionCall","src":"881:28:3"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"871:6:3"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"844:5:3","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"854:6:3","type":""}],"src":"813:102:3"},{"body":{"nodeType":"YulBlock","src":"949:152:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"966:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"969:77:3","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"959:6:3"},"nodeType":"YulFunctionCall","src":"959:88:3"},"nodeType":"YulExpressionStatement","src":"959:88:3"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1063:1:3","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1066:4:3","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1056:6:3"},"nodeType":"YulFunctionCall","src":"1056:15:3"},"nodeType":"YulExpressionStatement","src":"1056:15:3"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1087:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1090:4:3","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1080:6:3"},"nodeType":"YulFunctionCall","src":"1080:15:3"},"nodeType":"YulExpressionStatement","src":"1080:15:3"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"921:180:3"},{"body":{"nodeType":"YulBlock","src":"1150:238:3","statements":[{"nodeType":"YulVariableDeclaration","src":"1160:58:3","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1182:6:3"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"1212:4:3"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"1190:21:3"},"nodeType":"YulFunctionCall","src":"1190:27:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1178:3:3"},"nodeType":"YulFunctionCall","src":"1178:40:3"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"1164:10:3","type":""}]},{"body":{"nodeType":"YulBlock","src":"1329:22:3","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1331:16:3"},"nodeType":"YulFunctionCall","src":"1331:18:3"},"nodeType":"YulExpressionStatement","src":"1331:18:3"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1272:10:3"},{"kind":"number","nodeType":"YulLiteral","src":"1284:18:3","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1269:2:3"},"nodeType":"YulFunctionCall","src":"1269:34:3"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1308:10:3"},{"name":"memPtr","nodeType":"YulIdentifier","src":"1320:6:3"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1305:2:3"},"nodeType":"YulFunctionCall","src":"1305:22:3"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1266:2:3"},"nodeType":"YulFunctionCall","src":"1266:62:3"},"nodeType":"YulIf","src":"1263:88:3"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1367:2:3","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1371:10:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1360:6:3"},"nodeType":"YulFunctionCall","src":"1360:22:3"},"nodeType":"YulExpressionStatement","src":"1360:22:3"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"1136:6:3","type":""},{"name":"size","nodeType":"YulTypedName","src":"1144:4:3","type":""}],"src":"1107:281:3"},{"body":{"nodeType":"YulBlock","src":"1435:88:3","statements":[{"nodeType":"YulAssignment","src":"1445:30:3","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"1455:18:3"},"nodeType":"YulFunctionCall","src":"1455:20:3"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1445:6:3"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1504:6:3"},{"name":"size","nodeType":"YulIdentifier","src":"1512:4:3"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"1484:19:3"},"nodeType":"YulFunctionCall","src":"1484:33:3"},"nodeType":"YulExpressionStatement","src":"1484:33:3"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"1419:4:3","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1428:6:3","type":""}],"src":"1394:129:3"},{"body":{"nodeType":"YulBlock","src":"1611:229:3","statements":[{"body":{"nodeType":"YulBlock","src":"1716:22:3","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1718:16:3"},"nodeType":"YulFunctionCall","src":"1718:18:3"},"nodeType":"YulExpressionStatement","src":"1718:18:3"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1688:6:3"},{"kind":"number","nodeType":"YulLiteral","src":"1696:18:3","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1685:2:3"},"nodeType":"YulFunctionCall","src":"1685:30:3"},"nodeType":"YulIf","src":"1682:56:3"},{"nodeType":"YulAssignment","src":"1748:25:3","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1760:6:3"},{"kind":"number","nodeType":"YulLiteral","src":"1768:4:3","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"1756:3:3"},"nodeType":"YulFunctionCall","src":"1756:17:3"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1748:4:3"}]},{"nodeType":"YulAssignment","src":"1810:23:3","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"1822:4:3"},{"kind":"number","nodeType":"YulLiteral","src":"1828:4:3","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1818:3:3"},"nodeType":"YulFunctionCall","src":"1818:15:3"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1810:4:3"}]}]},"name":"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"1595:6:3","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"1606:4:3","type":""}],"src":"1529:311:3"},{"body":{"nodeType":"YulBlock","src":"1935:28:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1952:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1955:1:3","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1945:6:3"},"nodeType":"YulFunctionCall","src":"1945:12:3"},"nodeType":"YulExpressionStatement","src":"1945:12:3"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulFunctionDefinition","src":"1846:117:3"},{"body":{"nodeType":"YulBlock","src":"2088:608:3","statements":[{"nodeType":"YulAssignment","src":"2098:90:3","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2180:6:3"}],"functionName":{"name":"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"2123:56:3"},"nodeType":"YulFunctionCall","src":"2123:64:3"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"2107:15:3"},"nodeType":"YulFunctionCall","src":"2107:81:3"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"2098:5:3"}]},{"nodeType":"YulVariableDeclaration","src":"2197:16:3","value":{"name":"array","nodeType":"YulIdentifier","src":"2208:5:3"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"2201:3:3","type":""}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2230:5:3"},{"name":"length","nodeType":"YulIdentifier","src":"2237:6:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2223:6:3"},"nodeType":"YulFunctionCall","src":"2223:21:3"},"nodeType":"YulExpressionStatement","src":"2223:21:3"},{"nodeType":"YulAssignment","src":"2253:23:3","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2264:5:3"},{"kind":"number","nodeType":"YulLiteral","src":"2271:4:3","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2260:3:3"},"nodeType":"YulFunctionCall","src":"2260:16:3"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"2253:3:3"}]},{"nodeType":"YulVariableDeclaration","src":"2286:44:3","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2304:6:3"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2316:6:3"},{"kind":"number","nodeType":"YulLiteral","src":"2324:4:3","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2312:3:3"},"nodeType":"YulFunctionCall","src":"2312:17:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2300:3:3"},"nodeType":"YulFunctionCall","src":"2300:30:3"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"2290:6:3","type":""}]},{"body":{"nodeType":"YulBlock","src":"2358:103:3","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"2372:77:3"},"nodeType":"YulFunctionCall","src":"2372:79:3"},"nodeType":"YulExpressionStatement","src":"2372:79:3"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"2345:6:3"},{"name":"end","nodeType":"YulIdentifier","src":"2353:3:3"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2342:2:3"},"nodeType":"YulFunctionCall","src":"2342:15:3"},"nodeType":"YulIf","src":"2339:122:3"},{"body":{"nodeType":"YulBlock","src":"2546:144:3","statements":[{"nodeType":"YulVariableDeclaration","src":"2561:21:3","value":{"name":"src","nodeType":"YulIdentifier","src":"2579:3:3"},"variables":[{"name":"elementPos","nodeType":"YulTypedName","src":"2565:10:3","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2603:3:3"},{"arguments":[{"name":"elementPos","nodeType":"YulIdentifier","src":"2629:10:3"},{"name":"end","nodeType":"YulIdentifier","src":"2641:3:3"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2608:20:3"},"nodeType":"YulFunctionCall","src":"2608:37:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2596:6:3"},"nodeType":"YulFunctionCall","src":"2596:50:3"},"nodeType":"YulExpressionStatement","src":"2596:50:3"},{"nodeType":"YulAssignment","src":"2659:21:3","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2670:3:3"},{"kind":"number","nodeType":"YulLiteral","src":"2675:4:3","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2666:3:3"},"nodeType":"YulFunctionCall","src":"2666:14:3"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"2659:3:3"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2499:3:3"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"2504:6:3"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2496:2:3"},"nodeType":"YulFunctionCall","src":"2496:15:3"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2512:25:3","statements":[{"nodeType":"YulAssignment","src":"2514:21:3","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2525:3:3"},{"kind":"number","nodeType":"YulLiteral","src":"2530:4:3","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2521:3:3"},"nodeType":"YulFunctionCall","src":"2521:14:3"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"2514:3:3"}]}]},"pre":{"nodeType":"YulBlock","src":"2474:21:3","statements":[{"nodeType":"YulVariableDeclaration","src":"2476:17:3","value":{"name":"offset","nodeType":"YulIdentifier","src":"2487:6:3"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"2480:3:3","type":""}]}]},"src":"2470:220:3"}]},"name":"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2058:6:3","type":""},{"name":"length","nodeType":"YulTypedName","src":"2066:6:3","type":""},{"name":"end","nodeType":"YulTypedName","src":"2074:3:3","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2082:5:3","type":""}],"src":"1986:710:3"},{"body":{"nodeType":"YulBlock","src":"2796:293:3","statements":[{"body":{"nodeType":"YulBlock","src":"2845:83:3","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"2847:77:3"},"nodeType":"YulFunctionCall","src":"2847:79:3"},"nodeType":"YulExpressionStatement","src":"2847:79:3"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2824:6:3"},{"kind":"number","nodeType":"YulLiteral","src":"2832:4:3","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2820:3:3"},"nodeType":"YulFunctionCall","src":"2820:17:3"},{"name":"end","nodeType":"YulIdentifier","src":"2839:3:3"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2816:3:3"},"nodeType":"YulFunctionCall","src":"2816:27:3"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2809:6:3"},"nodeType":"YulFunctionCall","src":"2809:35:3"},"nodeType":"YulIf","src":"2806:122:3"},{"nodeType":"YulVariableDeclaration","src":"2937:34:3","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2964:6:3"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2951:12:3"},"nodeType":"YulFunctionCall","src":"2951:20:3"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2941:6:3","type":""}]},{"nodeType":"YulAssignment","src":"2980:103:3","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3056:6:3"},{"kind":"number","nodeType":"YulLiteral","src":"3064:4:3","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3052:3:3"},"nodeType":"YulFunctionCall","src":"3052:17:3"},{"name":"length","nodeType":"YulIdentifier","src":"3071:6:3"},{"name":"end","nodeType":"YulIdentifier","src":"3079:3:3"}],"functionName":{"name":"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"2989:62:3"},"nodeType":"YulFunctionCall","src":"2989:94:3"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"2980:5:3"}]}]},"name":"abi_decode_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2774:6:3","type":""},{"name":"end","nodeType":"YulTypedName","src":"2782:3:3","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2790:5:3","type":""}],"src":"2719:370:3"},{"body":{"nodeType":"YulBlock","src":"3203:576:3","statements":[{"body":{"nodeType":"YulBlock","src":"3249:83:3","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3251:77:3"},"nodeType":"YulFunctionCall","src":"3251:79:3"},"nodeType":"YulExpressionStatement","src":"3251:79:3"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3224:7:3"},{"name":"headStart","nodeType":"YulIdentifier","src":"3233:9:3"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3220:3:3"},"nodeType":"YulFunctionCall","src":"3220:23:3"},{"kind":"number","nodeType":"YulLiteral","src":"3245:2:3","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3216:3:3"},"nodeType":"YulFunctionCall","src":"3216:32:3"},"nodeType":"YulIf","src":"3213:119:3"},{"nodeType":"YulBlock","src":"3342:117:3","statements":[{"nodeType":"YulVariableDeclaration","src":"3357:15:3","value":{"kind":"number","nodeType":"YulLiteral","src":"3371:1:3","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3361:6:3","type":""}]},{"nodeType":"YulAssignment","src":"3386:63:3","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3421:9:3"},{"name":"offset","nodeType":"YulIdentifier","src":"3432:6:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3417:3:3"},"nodeType":"YulFunctionCall","src":"3417:22:3"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3441:7:3"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"3396:20:3"},"nodeType":"YulFunctionCall","src":"3396:53:3"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3386:6:3"}]}]},{"nodeType":"YulBlock","src":"3469:303:3","statements":[{"nodeType":"YulVariableDeclaration","src":"3484:46:3","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3515:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"3526:2:3","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3511:3:3"},"nodeType":"YulFunctionCall","src":"3511:18:3"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3498:12:3"},"nodeType":"YulFunctionCall","src":"3498:32:3"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3488:6:3","type":""}]},{"body":{"nodeType":"YulBlock","src":"3577:83:3","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3579:77:3"},"nodeType":"YulFunctionCall","src":"3579:79:3"},"nodeType":"YulExpressionStatement","src":"3579:79:3"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3549:6:3"},{"kind":"number","nodeType":"YulLiteral","src":"3557:18:3","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3546:2:3"},"nodeType":"YulFunctionCall","src":"3546:30:3"},"nodeType":"YulIf","src":"3543:117:3"},{"nodeType":"YulAssignment","src":"3674:88:3","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3734:9:3"},{"name":"offset","nodeType":"YulIdentifier","src":"3745:6:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3730:3:3"},"nodeType":"YulFunctionCall","src":"3730:22:3"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3754:7:3"}],"functionName":{"name":"abi_decode_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"3684:45:3"},"nodeType":"YulFunctionCall","src":"3684:78:3"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3674:6:3"}]}]}]},"name":"abi_decode_tuple_t_uint256t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3165:9:3","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3176:7:3","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3188:6:3","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3196:6:3","type":""}],"src":"3095:684:3"},{"body":{"nodeType":"YulBlock","src":"3830:81:3","statements":[{"nodeType":"YulAssignment","src":"3840:65:3","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3855:5:3"},{"kind":"number","nodeType":"YulLiteral","src":"3862:42:3","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3851:3:3"},"nodeType":"YulFunctionCall","src":"3851:54:3"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3840:7:3"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3812:5:3","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3822:7:3","type":""}],"src":"3785:126:3"},{"body":{"nodeType":"YulBlock","src":"3962:51:3","statements":[{"nodeType":"YulAssignment","src":"3972:35:3","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4001:5:3"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"3983:17:3"},"nodeType":"YulFunctionCall","src":"3983:24:3"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3972:7:3"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3944:5:3","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3954:7:3","type":""}],"src":"3917:96:3"},{"body":{"nodeType":"YulBlock","src":"4084:53:3","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4101:3:3"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4124:5:3"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"4106:17:3"},"nodeType":"YulFunctionCall","src":"4106:24:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4094:6:3"},"nodeType":"YulFunctionCall","src":"4094:37:3"},"nodeType":"YulExpressionStatement","src":"4094:37:3"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4072:5:3","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4079:3:3","type":""}],"src":"4019:118:3"},{"body":{"nodeType":"YulBlock","src":"4241:124:3","statements":[{"nodeType":"YulAssignment","src":"4251:26:3","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4263:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"4274:2:3","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4259:3:3"},"nodeType":"YulFunctionCall","src":"4259:18:3"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4251:4:3"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4331:6:3"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4344:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"4355:1:3","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4340:3:3"},"nodeType":"YulFunctionCall","src":"4340:17:3"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"4287:43:3"},"nodeType":"YulFunctionCall","src":"4287:71:3"},"nodeType":"YulExpressionStatement","src":"4287:71:3"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4213:9:3","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4225:6:3","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4236:4:3","type":""}],"src":"4143:222:3"},{"body":{"nodeType":"YulBlock","src":"4437:263:3","statements":[{"body":{"nodeType":"YulBlock","src":"4483:83:3","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4485:77:3"},"nodeType":"YulFunctionCall","src":"4485:79:3"},"nodeType":"YulExpressionStatement","src":"4485:79:3"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4458:7:3"},{"name":"headStart","nodeType":"YulIdentifier","src":"4467:9:3"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4454:3:3"},"nodeType":"YulFunctionCall","src":"4454:23:3"},{"kind":"number","nodeType":"YulLiteral","src":"4479:2:3","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4450:3:3"},"nodeType":"YulFunctionCall","src":"4450:32:3"},"nodeType":"YulIf","src":"4447:119:3"},{"nodeType":"YulBlock","src":"4576:117:3","statements":[{"nodeType":"YulVariableDeclaration","src":"4591:15:3","value":{"kind":"number","nodeType":"YulLiteral","src":"4605:1:3","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4595:6:3","type":""}]},{"nodeType":"YulAssignment","src":"4620:63:3","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4655:9:3"},{"name":"offset","nodeType":"YulIdentifier","src":"4666:6:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4651:3:3"},"nodeType":"YulFunctionCall","src":"4651:22:3"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4675:7:3"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4630:20:3"},"nodeType":"YulFunctionCall","src":"4630:53:3"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4620:6:3"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4407:9:3","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4418:7:3","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4430:6:3","type":""}],"src":"4371:329:3"},{"body":{"nodeType":"YulBlock","src":"4832:206:3","statements":[{"nodeType":"YulAssignment","src":"4842:26:3","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4854:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"4865:2:3","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4850:3:3"},"nodeType":"YulFunctionCall","src":"4850:18:3"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4842:4:3"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4922:6:3"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4935:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"4946:1:3","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4931:3:3"},"nodeType":"YulFunctionCall","src":"4931:17:3"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"4878:43:3"},"nodeType":"YulFunctionCall","src":"4878:71:3"},"nodeType":"YulExpressionStatement","src":"4878:71:3"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"5003:6:3"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5016:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"5027:2:3","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5012:3:3"},"nodeType":"YulFunctionCall","src":"5012:18:3"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"4959:43:3"},"nodeType":"YulFunctionCall","src":"4959:72:3"},"nodeType":"YulExpressionStatement","src":"4959:72:3"}]},"name":"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4796:9:3","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4808:6:3","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4816:6:3","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4827:4:3","type":""}],"src":"4706:332:3"},{"body":{"nodeType":"YulBlock","src":"5089:32:3","statements":[{"nodeType":"YulAssignment","src":"5099:16:3","value":{"name":"value","nodeType":"YulIdentifier","src":"5110:5:3"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"5099:7:3"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5071:5:3","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"5081:7:3","type":""}],"src":"5044:77:3"},{"body":{"nodeType":"YulBlock","src":"5192:53:3","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5209:3:3"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5232:5:3"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"5214:17:3"},"nodeType":"YulFunctionCall","src":"5214:24:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5202:6:3"},"nodeType":"YulFunctionCall","src":"5202:37:3"},"nodeType":"YulExpressionStatement","src":"5202:37:3"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5180:5:3","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5187:3:3","type":""}],"src":"5127:118:3"},{"body":{"nodeType":"YulBlock","src":"5295:57:3","statements":[{"nodeType":"YulAssignment","src":"5305:41:3","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5320:5:3"},{"kind":"number","nodeType":"YulLiteral","src":"5327:18:3","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5316:3:3"},"nodeType":"YulFunctionCall","src":"5316:30:3"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"5305:7:3"}]}]},"name":"cleanup_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5277:5:3","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"5287:7:3","type":""}],"src":"5251:101:3"},{"body":{"nodeType":"YulBlock","src":"5421:52:3","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5438:3:3"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5460:5:3"}],"functionName":{"name":"cleanup_t_uint64","nodeType":"YulIdentifier","src":"5443:16:3"},"nodeType":"YulFunctionCall","src":"5443:23:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5431:6:3"},"nodeType":"YulFunctionCall","src":"5431:36:3"},"nodeType":"YulExpressionStatement","src":"5431:36:3"}]},"name":"abi_encode_t_uint64_to_t_uint64_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5409:5:3","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5416:3:3","type":""}],"src":"5358:115:3"},{"body":{"nodeType":"YulBlock","src":"5523:45:3","statements":[{"nodeType":"YulAssignment","src":"5533:29:3","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5548:5:3"},{"kind":"number","nodeType":"YulLiteral","src":"5555:6:3","type":"","value":"0xffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5544:3:3"},"nodeType":"YulFunctionCall","src":"5544:18:3"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"5533:7:3"}]}]},"name":"cleanup_t_uint16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5505:5:3","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"5515:7:3","type":""}],"src":"5479:89:3"},{"body":{"nodeType":"YulBlock","src":"5637:52:3","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5654:3:3"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5676:5:3"}],"functionName":{"name":"cleanup_t_uint16","nodeType":"YulIdentifier","src":"5659:16:3"},"nodeType":"YulFunctionCall","src":"5659:23:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5647:6:3"},"nodeType":"YulFunctionCall","src":"5647:36:3"},"nodeType":"YulExpressionStatement","src":"5647:36:3"}]},"name":"abi_encode_t_uint16_to_t_uint16_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5625:5:3","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5632:3:3","type":""}],"src":"5574:115:3"},{"body":{"nodeType":"YulBlock","src":"5739:49:3","statements":[{"nodeType":"YulAssignment","src":"5749:33:3","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5764:5:3"},{"kind":"number","nodeType":"YulLiteral","src":"5771:10:3","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5760:3:3"},"nodeType":"YulFunctionCall","src":"5760:22:3"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"5749:7:3"}]}]},"name":"cleanup_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5721:5:3","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"5731:7:3","type":""}],"src":"5695:93:3"},{"body":{"nodeType":"YulBlock","src":"5857:52:3","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5874:3:3"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5896:5:3"}],"functionName":{"name":"cleanup_t_uint32","nodeType":"YulIdentifier","src":"5879:16:3"},"nodeType":"YulFunctionCall","src":"5879:23:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5867:6:3"},"nodeType":"YulFunctionCall","src":"5867:36:3"},"nodeType":"YulExpressionStatement","src":"5867:36:3"}]},"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5845:5:3","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5852:3:3","type":""}],"src":"5794:115:3"},{"body":{"nodeType":"YulBlock","src":"6117:446:3","statements":[{"nodeType":"YulAssignment","src":"6127:27:3","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6139:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"6150:3:3","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6135:3:3"},"nodeType":"YulFunctionCall","src":"6135:19:3"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6127:4:3"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6208:6:3"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6221:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"6232:1:3","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6217:3:3"},"nodeType":"YulFunctionCall","src":"6217:17:3"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"6164:43:3"},"nodeType":"YulFunctionCall","src":"6164:71:3"},"nodeType":"YulExpressionStatement","src":"6164:71:3"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"6287:6:3"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6300:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"6311:2:3","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6296:3:3"},"nodeType":"YulFunctionCall","src":"6296:18:3"}],"functionName":{"name":"abi_encode_t_uint64_to_t_uint64_fromStack","nodeType":"YulIdentifier","src":"6245:41:3"},"nodeType":"YulFunctionCall","src":"6245:70:3"},"nodeType":"YulExpressionStatement","src":"6245:70:3"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"6367:6:3"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6380:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"6391:2:3","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6376:3:3"},"nodeType":"YulFunctionCall","src":"6376:18:3"}],"functionName":{"name":"abi_encode_t_uint16_to_t_uint16_fromStack","nodeType":"YulIdentifier","src":"6325:41:3"},"nodeType":"YulFunctionCall","src":"6325:70:3"},"nodeType":"YulExpressionStatement","src":"6325:70:3"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"6447:6:3"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6460:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"6471:2:3","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6456:3:3"},"nodeType":"YulFunctionCall","src":"6456:18:3"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"6405:41:3"},"nodeType":"YulFunctionCall","src":"6405:70:3"},"nodeType":"YulExpressionStatement","src":"6405:70:3"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"6527:6:3"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6540:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"6551:3:3","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6536:3:3"},"nodeType":"YulFunctionCall","src":"6536:19:3"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"6485:41:3"},"nodeType":"YulFunctionCall","src":"6485:71:3"},"nodeType":"YulExpressionStatement","src":"6485:71:3"}]},"name":"abi_encode_tuple_t_bytes32_t_uint64_t_uint16_t_uint32_t_uint32__to_t_bytes32_t_uint64_t_uint16_t_uint32_t_uint32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6057:9:3","type":""},{"name":"value4","nodeType":"YulTypedName","src":"6069:6:3","type":""},{"name":"value3","nodeType":"YulTypedName","src":"6077:6:3","type":""},{"name":"value2","nodeType":"YulTypedName","src":"6085:6:3","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6093:6:3","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6101:6:3","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6112:4:3","type":""}],"src":"5915:648:3"},{"body":{"nodeType":"YulBlock","src":"6632:80:3","statements":[{"nodeType":"YulAssignment","src":"6642:22:3","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6657:6:3"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6651:5:3"},"nodeType":"YulFunctionCall","src":"6651:13:3"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"6642:5:3"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6700:5:3"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"6673:26:3"},"nodeType":"YulFunctionCall","src":"6673:33:3"},"nodeType":"YulExpressionStatement","src":"6673:33:3"}]},"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"6610:6:3","type":""},{"name":"end","nodeType":"YulTypedName","src":"6618:3:3","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"6626:5:3","type":""}],"src":"6569:143:3"},{"body":{"nodeType":"YulBlock","src":"6795:274:3","statements":[{"body":{"nodeType":"YulBlock","src":"6841:83:3","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"6843:77:3"},"nodeType":"YulFunctionCall","src":"6843:79:3"},"nodeType":"YulExpressionStatement","src":"6843:79:3"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6816:7:3"},{"name":"headStart","nodeType":"YulIdentifier","src":"6825:9:3"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6812:3:3"},"nodeType":"YulFunctionCall","src":"6812:23:3"},{"kind":"number","nodeType":"YulLiteral","src":"6837:2:3","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6808:3:3"},"nodeType":"YulFunctionCall","src":"6808:32:3"},"nodeType":"YulIf","src":"6805:119:3"},{"nodeType":"YulBlock","src":"6934:128:3","statements":[{"nodeType":"YulVariableDeclaration","src":"6949:15:3","value":{"kind":"number","nodeType":"YulLiteral","src":"6963:1:3","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6953:6:3","type":""}]},{"nodeType":"YulAssignment","src":"6978:74:3","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7024:9:3"},{"name":"offset","nodeType":"YulIdentifier","src":"7035:6:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7020:3:3"},"nodeType":"YulFunctionCall","src":"7020:22:3"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7044:7:3"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"6988:31:3"},"nodeType":"YulFunctionCall","src":"6988:64:3"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6978:6:3"}]}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6765:9:3","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6776:7:3","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6788:6:3","type":""}],"src":"6718:351:3"},{"body":{"nodeType":"YulBlock","src":"7103:152:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7120:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7123:77:3","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7113:6:3"},"nodeType":"YulFunctionCall","src":"7113:88:3"},"nodeType":"YulExpressionStatement","src":"7113:88:3"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7217:1:3","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"7220:4:3","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7210:6:3"},"nodeType":"YulFunctionCall","src":"7210:15:3"},"nodeType":"YulExpressionStatement","src":"7210:15:3"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7241:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7244:4:3","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7234:6:3"},"nodeType":"YulFunctionCall","src":"7234:15:3"},"nodeType":"YulExpressionStatement","src":"7234:15:3"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"7075:180:3"},{"body":{"nodeType":"YulBlock","src":"7289:152:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7306:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7309:77:3","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7299:6:3"},"nodeType":"YulFunctionCall","src":"7299:88:3"},"nodeType":"YulExpressionStatement","src":"7299:88:3"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7403:1:3","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"7406:4:3","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7396:6:3"},"nodeType":"YulFunctionCall","src":"7396:15:3"},"nodeType":"YulExpressionStatement","src":"7396:15:3"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7427:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7430:4:3","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7420:6:3"},"nodeType":"YulFunctionCall","src":"7420:15:3"},"nodeType":"YulExpressionStatement","src":"7420:15:3"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"7261:180:3"},{"body":{"nodeType":"YulBlock","src":"7481:142:3","statements":[{"nodeType":"YulAssignment","src":"7491:25:3","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"7514:1:3"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"7496:17:3"},"nodeType":"YulFunctionCall","src":"7496:20:3"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"7491:1:3"}]},{"nodeType":"YulAssignment","src":"7525:25:3","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"7548:1:3"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"7530:17:3"},"nodeType":"YulFunctionCall","src":"7530:20:3"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"7525:1:3"}]},{"body":{"nodeType":"YulBlock","src":"7572:22:3","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"7574:16:3"},"nodeType":"YulFunctionCall","src":"7574:18:3"},"nodeType":"YulExpressionStatement","src":"7574:18:3"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"7569:1:3"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7562:6:3"},"nodeType":"YulFunctionCall","src":"7562:9:3"},"nodeType":"YulIf","src":"7559:35:3"},{"nodeType":"YulAssignment","src":"7603:14:3","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"7612:1:3"},{"name":"y","nodeType":"YulIdentifier","src":"7615:1:3"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"7608:3:3"},"nodeType":"YulFunctionCall","src":"7608:9:3"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"7603:1:3"}]}]},"name":"mod_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"7470:1:3","type":""},{"name":"y","nodeType":"YulTypedName","src":"7473:1:3","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"7479:1:3","type":""}],"src":"7447:176:3"},{"body":{"nodeType":"YulBlock","src":"7657:152:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7674:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7677:77:3","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7667:6:3"},"nodeType":"YulFunctionCall","src":"7667:88:3"},"nodeType":"YulExpressionStatement","src":"7667:88:3"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7771:1:3","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"7774:4:3","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7764:6:3"},"nodeType":"YulFunctionCall","src":"7764:15:3"},"nodeType":"YulExpressionStatement","src":"7764:15:3"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7795:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7798:4:3","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7788:6:3"},"nodeType":"YulFunctionCall","src":"7788:15:3"},"nodeType":"YulExpressionStatement","src":"7788:15:3"}]},"name":"panic_error_0x21","nodeType":"YulFunctionDefinition","src":"7629:180:3"},{"body":{"nodeType":"YulBlock","src":"7928:34:3","statements":[{"nodeType":"YulAssignment","src":"7938:18:3","value":{"name":"pos","nodeType":"YulIdentifier","src":"7953:3:3"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"7938:11:3"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7900:3:3","type":""},{"name":"length","nodeType":"YulTypedName","src":"7905:6:3","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"7916:11:3","type":""}],"src":"7815:147:3"},{"body":{"nodeType":"YulBlock","src":"8074:8:3","statements":[]},"name":"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"8066:6:3","type":""}],"src":"7968:114:3"},{"body":{"nodeType":"YulBlock","src":"8251:235:3","statements":[{"nodeType":"YulAssignment","src":"8261:90:3","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8344:3:3"},{"kind":"number","nodeType":"YulLiteral","src":"8349:1:3","type":"","value":"0"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"8268:75:3"},"nodeType":"YulFunctionCall","src":"8268:83:3"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8261:3:3"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8449:3:3"}],"functionName":{"name":"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","nodeType":"YulIdentifier","src":"8360:88:3"},"nodeType":"YulFunctionCall","src":"8360:93:3"},"nodeType":"YulExpressionStatement","src":"8360:93:3"},{"nodeType":"YulAssignment","src":"8462:18:3","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8473:3:3"},{"kind":"number","nodeType":"YulLiteral","src":"8478:1:3","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8469:3:3"},"nodeType":"YulFunctionCall","src":"8469:11:3"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8462:3:3"}]}]},"name":"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8239:3:3","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8247:3:3","type":""}],"src":"8088:398:3"},{"body":{"nodeType":"YulBlock","src":"8680:191:3","statements":[{"nodeType":"YulAssignment","src":"8691:154:3","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8841:3:3"}],"functionName":{"name":"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"8698:141:3"},"nodeType":"YulFunctionCall","src":"8698:147:3"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8691:3:3"}]},{"nodeType":"YulAssignment","src":"8855:10:3","value":{"name":"pos","nodeType":"YulIdentifier","src":"8862:3:3"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8855:3:3"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8667:3:3","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8676:3:3","type":""}],"src":"8492:379:3"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint256(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_uint256t_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function abi_encode_t_uint64_to_t_uint64_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint64(value))\n    }\n\n    function cleanup_t_uint16(value) -> cleaned {\n        cleaned := and(value, 0xffff)\n    }\n\n    function abi_encode_t_uint16_to_t_uint16_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint16(value))\n    }\n\n    function cleanup_t_uint32(value) -> cleaned {\n        cleaned := and(value, 0xffffffff)\n    }\n\n    function abi_encode_t_uint32_to_t_uint32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32_t_uint64_t_uint16_t_uint32_t_uint32__to_t_bytes32_t_uint64_t_uint16_t_uint32_t_uint32__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint64_to_t_uint64_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint16_to_t_uint16_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function mod_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n}\n","id":3,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"10":[{"length":32,"start":259},{"length":32,"start":343}],"168":[{"length":32,"start":846}],"170":[{"length":32,"start":813}],"172":[{"length":32,"start":881}],"182":[{"length":32,"start":451}],"195":[{"length":32,"start":753}]},"linkReferences":{},"object":"60806040526004361061004a5760003560e01c80631fe543e31461004f5780632cfcc53914610078578063473f1ddc14610082578063e0c86289146100ad578063e55ae4e8146100c4575b600080fd5b34801561005b57600080fd5b50610076600480360381019061007191906108ec565b610101565b005b6100806101c1565b005b34801561008e57600080fd5b506100976102c3565b6040516100a49190610989565b60405180910390f35b3480156100b957600080fd5b506100c26102ed565b005b3480156100d057600080fd5b506100eb60048036038101906100e691906109a4565b610427565b6040516100f89190610989565b60405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146101b357337f00000000000000000000000000000000000000000000000000000000000000006040517f1cf993f40000000000000000000000000000000000000000000000000000000081526004016101aa9291906109d1565b60405180910390fd5b6101bd828261046f565b5050565b7f000000000000000000000000000000000000000000000000000000000000000034101561021b576040517f3038c00a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff167f0805e1d667bddb8a95f0f09880cf94f403fb596ce79928d9f29b74203ba284d460405160405180910390a2565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16635d3b1d307f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000060037f000000000000000000000000000000000000000000000000000000000000000060016040518663ffffffff1660e01b81526004016103b2959493929190610a72565b6020604051808303816000875af11580156103d1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103f59190610ada565b9050807fcd6e45c8998311cab7e9d4385596cac867e20a0587194b954fa3a731c93ce78b60405160405180910390a250565b60006002828154811061043d5761043c610b07565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006002805490508260008151811061048b5761048a610b07565b5b602002602001015161049d9190610b65565b90506000600282815481106104b5576104b4610b07565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600067ffffffffffffffff81111561053e5761053d6107a9565b5b60405190808252806020026020018201604052801561056c5781602001602082028036833780820191505090505b50600290805190602001906105829291906106a2565b506000600360006101000a81548160ff021916908360018111156105a9576105a8610b96565b5b02179055504260008190555060008173ffffffffffffffffffffffffffffffffffffffff16476040516105db90610bf6565b60006040518083038185875af1925050503d8060008114610618576040519150601f19603f3d011682016040523d82523d6000602084013e61061d565b606091505b5050905080610658576040517fa1d04b3900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff167f5b690ec4a06fe979403046eaeea5b3ce38524683c3001f662c8b5a829632f7df60405160405180910390a25050505050565b82805482825590600052602060002090810192821561071b579160200282015b8281111561071a5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106c2565b5b509050610728919061072c565b5090565b5b8082111561074557600081600090555060010161072d565b5090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b6107708161075d565b811461077b57600080fd5b50565b60008135905061078d81610767565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6107e182610798565b810181811067ffffffffffffffff82111715610800576107ff6107a9565b5b80604052505050565b6000610813610749565b905061081f82826107d8565b919050565b600067ffffffffffffffff82111561083f5761083e6107a9565b5b602082029050602081019050919050565b600080fd5b600061086861086384610824565b610809565b9050808382526020820190506020840283018581111561088b5761088a610850565b5b835b818110156108b457806108a0888261077e565b84526020840193505060208101905061088d565b5050509392505050565b600082601f8301126108d3576108d2610793565b5b81356108e3848260208601610855565b91505092915050565b6000806040838503121561090357610902610753565b5b60006109118582860161077e565b925050602083013567ffffffffffffffff81111561093257610931610758565b5b61093e858286016108be565b9150509250929050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061097382610948565b9050919050565b61098381610968565b82525050565b600060208201905061099e600083018461097a565b92915050565b6000602082840312156109ba576109b9610753565b5b60006109c88482850161077e565b91505092915050565b60006040820190506109e6600083018561097a565b6109f3602083018461097a565b9392505050565b6000819050919050565b610a0d816109fa565b82525050565b600067ffffffffffffffff82169050919050565b610a3081610a13565b82525050565b600061ffff82169050919050565b610a4d81610a36565b82525050565b600063ffffffff82169050919050565b610a6c81610a53565b82525050565b600060a082019050610a876000830188610a04565b610a946020830187610a27565b610aa16040830186610a44565b610aae6060830185610a63565b610abb6080830184610a63565b9695505050505050565b600081519050610ad481610767565b92915050565b600060208284031215610af057610aef610753565b5b6000610afe84828501610ac5565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610b708261075d565b9150610b7b8361075d565b925082610b8b57610b8a610b36565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600081905092915050565b50565b6000610be0600083610bc5565b9150610beb82610bd0565b600082019050919050565b6000610c0182610bd3565b915081905091905056fea2646970667358221220f6fc1d63138011205ef829ce95072de78bcfe51d53d85d00e22fd2b48faaf9be64736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FE543E3 EQ PUSH2 0x4F JUMPI DUP1 PUSH4 0x2CFCC539 EQ PUSH2 0x78 JUMPI DUP1 PUSH4 0x473F1DDC EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0xE0C86289 EQ PUSH2 0xAD JUMPI DUP1 PUSH4 0xE55AE4E8 EQ PUSH2 0xC4 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x76 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x71 SWAP2 SWAP1 PUSH2 0x8EC JUMP JUMPDEST PUSH2 0x101 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x80 PUSH2 0x1C1 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x97 PUSH2 0x2C3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA4 SWAP2 SWAP1 PUSH2 0x989 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC2 PUSH2 0x2ED JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xEB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE6 SWAP2 SWAP1 PUSH2 0x9A4 JUMP JUMPDEST PUSH2 0x427 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF8 SWAP2 SWAP1 PUSH2 0x989 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1B3 JUMPI CALLER PUSH32 0x0 PUSH1 0x40 MLOAD PUSH32 0x1CF993F400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AA SWAP3 SWAP2 SWAP1 PUSH2 0x9D1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1BD DUP3 DUP3 PUSH2 0x46F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH32 0x0 CALLVALUE LT ISZERO PUSH2 0x21B JUMPI PUSH1 0x40 MLOAD PUSH32 0x3038C00A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 CALLER SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x805E1D667BDDB8A95F0F09880CF94F403FB596CE79928D9F29B74203BA284D4 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x5D3B1D30 PUSH32 0x0 PUSH32 0x0 PUSH1 0x3 PUSH32 0x0 PUSH1 0x1 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B2 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xA72 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3D1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3F5 SWAP2 SWAP1 PUSH2 0xADA JUMP JUMPDEST SWAP1 POP DUP1 PUSH32 0xCD6E45C8998311CAB7E9D4385596CAC867E20A0587194B954FA3A731C93CE78B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x43D JUMPI PUSH2 0x43C PUSH2 0xB07 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP1 SLOAD SWAP1 POP DUP3 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x48B JUMPI PUSH2 0x48A PUSH2 0xB07 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x49D SWAP2 SWAP1 PUSH2 0xB65 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x2 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x4B5 JUMPI PUSH2 0x4B4 PUSH2 0xB07 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x53E JUMPI PUSH2 0x53D PUSH2 0x7A9 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x56C JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH1 0x2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x582 SWAP3 SWAP2 SWAP1 PUSH2 0x6A2 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x5A9 JUMPI PUSH2 0x5A8 PUSH2 0xB96 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFBALANCE PUSH1 0x40 MLOAD PUSH2 0x5DB SWAP1 PUSH2 0xBF6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x618 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x61D JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x658 JUMPI PUSH1 0x40 MLOAD PUSH32 0xA1D04B3900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x5B690EC4A06FE979403046EAEEA5B3CE38524683C3001F662C8B5A829632F7DF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x71B JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x71A JUMPI DUP3 MLOAD DUP3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x6C2 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x728 SWAP2 SWAP1 PUSH2 0x72C JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x745 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x72D JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x770 DUP2 PUSH2 0x75D JUMP JUMPDEST DUP2 EQ PUSH2 0x77B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x78D DUP2 PUSH2 0x767 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x7E1 DUP3 PUSH2 0x798 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x800 JUMPI PUSH2 0x7FF PUSH2 0x7A9 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x813 PUSH2 0x749 JUMP JUMPDEST SWAP1 POP PUSH2 0x81F DUP3 DUP3 PUSH2 0x7D8 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x83F JUMPI PUSH2 0x83E PUSH2 0x7A9 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x868 PUSH2 0x863 DUP5 PUSH2 0x824 JUMP JUMPDEST PUSH2 0x809 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x88B JUMPI PUSH2 0x88A PUSH2 0x850 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x8B4 JUMPI DUP1 PUSH2 0x8A0 DUP9 DUP3 PUSH2 0x77E JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x88D JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x8D3 JUMPI PUSH2 0x8D2 PUSH2 0x793 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x8E3 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x855 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x903 JUMPI PUSH2 0x902 PUSH2 0x753 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x911 DUP6 DUP3 DUP7 ADD PUSH2 0x77E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x932 JUMPI PUSH2 0x931 PUSH2 0x758 JUMP JUMPDEST JUMPDEST PUSH2 0x93E DUP6 DUP3 DUP7 ADD PUSH2 0x8BE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x973 DUP3 PUSH2 0x948 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x983 DUP2 PUSH2 0x968 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x99E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x97A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9BA JUMPI PUSH2 0x9B9 PUSH2 0x753 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x9C8 DUP5 DUP3 DUP6 ADD PUSH2 0x77E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x9E6 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x97A JUMP JUMPDEST PUSH2 0x9F3 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x97A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA0D DUP2 PUSH2 0x9FA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA30 DUP2 PUSH2 0xA13 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA4D DUP2 PUSH2 0xA36 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA6C DUP2 PUSH2 0xA53 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0xA87 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0xA04 JUMP JUMPDEST PUSH2 0xA94 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0xA27 JUMP JUMPDEST PUSH2 0xAA1 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0xA44 JUMP JUMPDEST PUSH2 0xAAE PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0xA63 JUMP JUMPDEST PUSH2 0xABB PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0xA63 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xAD4 DUP2 PUSH2 0x767 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAF0 JUMPI PUSH2 0xAEF PUSH2 0x753 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xAFE DUP5 DUP3 DUP6 ADD PUSH2 0xAC5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xB70 DUP3 PUSH2 0x75D JUMP JUMPDEST SWAP2 POP PUSH2 0xB7B DUP4 PUSH2 0x75D JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xB8B JUMPI PUSH2 0xB8A PUSH2 0xB36 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBE0 PUSH1 0x0 DUP4 PUSH2 0xBC5 JUMP JUMPDEST SWAP2 POP PUSH2 0xBEB DUP3 PUSH2 0xBD0 JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC01 DUP3 PUSH2 0xBD3 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF6 0xFC SAR PUSH4 0x13801120 0x5E 0xF8 0x29 0xCE SWAP6 SMOD 0x2D 0xE7 DUP12 0xCF 0xE5 SAR MSTORE8 0xD8 0x5D STOP 0xE2 0x2F 0xD2 0xB4 DUP16 0xAA 0xF9 0xBE PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"291:2872:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6618:256:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1791:224:2;;;:::i;:::-;;3072:89;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2019:325;;;;;;;;;;;;;:::i;:::-;;2970:98;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6618:256:0;6731:14;6717:28;;:10;:28;;;6713:109;;6788:10;6800:14;6762:53;;;;;;;;;;;;:::i;:::-;;;;;;;;6713:109;6827:42;6846:9;6857:11;6827:18;:42::i;:::-;6618:256;;:::o;1791:224:2:-;1851:13;1839:9;:25;1835:176;;;1881:31;;;;;;;;;;;;;;1835:176;1933:9;1956:10;1933:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1993:10;1981:23;;;;;;;;;;;;1791:224::o;3072:89::-;3120:7;3142:14;;;;;;;;;;;3135:21;;3072:89;:::o;2019:325::-;2122:17;2142:16;:35;;;2185:9;2202:16;612:1;2255:18;653:1;2142:154;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2122:174;;2329:9;2307:32;;;;;;;;;;2058:286;2019:325::o;2970:98::-;3025:7;3047:9;3057:5;3047:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3040:23;;2970:98;;;:::o;2348:618::-;2467:21;2508:9;:16;;;;2491:11;2503:1;2491:14;;;;;;;;:::i;:::-;;;;;;;;:33;;;;:::i;:::-;2467:57;;2530:28;2561:9;2571:13;2561:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2530:55;;2608:12;2591:14;;:29;;;;;;;;;;;;;;;;;;2660:1;2638:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2626:9;:36;;;;;;;;;;;;:::i;:::-;;2684:16;2668:13;;:32;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;2724:15;2706;:33;;;;2746:12;2764;:17;;2789:21;2764:51;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2745:70;;;2870:7;2865:60;;2894:24;;;;;;;;;;;;;;2865:60;2948:12;2935:26;;;;;;;;;;;;2461:505;;;2348:618;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:75:3:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:117::-;799:1;796;789:12;813:102;854:6;905:2;901:7;896:2;889:5;885:14;881:28;871:38;;813:102;;;:::o;921:180::-;969:77;966:1;959:88;1066:4;1063:1;1056:15;1090:4;1087:1;1080:15;1107:281;1190:27;1212:4;1190:27;:::i;:::-;1182:6;1178:40;1320:6;1308:10;1305:22;1284:18;1272:10;1269:34;1266:62;1263:88;;;1331:18;;:::i;:::-;1263:88;1371:10;1367:2;1360:22;1150:238;1107:281;;:::o;1394:129::-;1428:6;1455:20;;:::i;:::-;1445:30;;1484:33;1512:4;1504:6;1484:33;:::i;:::-;1394:129;;;:::o;1529:311::-;1606:4;1696:18;1688:6;1685:30;1682:56;;;1718:18;;:::i;:::-;1682:56;1768:4;1760:6;1756:17;1748:25;;1828:4;1822;1818:15;1810:23;;1529:311;;;:::o;1846:117::-;1955:1;1952;1945:12;1986:710;2082:5;2107:81;2123:64;2180:6;2123:64;:::i;:::-;2107:81;:::i;:::-;2098:90;;2208:5;2237:6;2230:5;2223:21;2271:4;2264:5;2260:16;2253:23;;2324:4;2316:6;2312:17;2304:6;2300:30;2353:3;2345:6;2342:15;2339:122;;;2372:79;;:::i;:::-;2339:122;2487:6;2470:220;2504:6;2499:3;2496:15;2470:220;;;2579:3;2608:37;2641:3;2629:10;2608:37;:::i;:::-;2603:3;2596:50;2675:4;2670:3;2666:14;2659:21;;2546:144;2530:4;2525:3;2521:14;2514:21;;2470:220;;;2474:21;2088:608;;1986:710;;;;;:::o;2719:370::-;2790:5;2839:3;2832:4;2824:6;2820:17;2816:27;2806:122;;2847:79;;:::i;:::-;2806:122;2964:6;2951:20;2989:94;3079:3;3071:6;3064:4;3056:6;3052:17;2989:94;:::i;:::-;2980:103;;2796:293;2719:370;;;;:::o;3095:684::-;3188:6;3196;3245:2;3233:9;3224:7;3220:23;3216:32;3213:119;;;3251:79;;:::i;:::-;3213:119;3371:1;3396:53;3441:7;3432:6;3421:9;3417:22;3396:53;:::i;:::-;3386:63;;3342:117;3526:2;3515:9;3511:18;3498:32;3557:18;3549:6;3546:30;3543:117;;;3579:79;;:::i;:::-;3543:117;3684:78;3754:7;3745:6;3734:9;3730:22;3684:78;:::i;:::-;3674:88;;3469:303;3095:684;;;;;:::o;3785:126::-;3822:7;3862:42;3855:5;3851:54;3840:65;;3785:126;;;:::o;3917:96::-;3954:7;3983:24;4001:5;3983:24;:::i;:::-;3972:35;;3917:96;;;:::o;4019:118::-;4106:24;4124:5;4106:24;:::i;:::-;4101:3;4094:37;4019:118;;:::o;4143:222::-;4236:4;4274:2;4263:9;4259:18;4251:26;;4287:71;4355:1;4344:9;4340:17;4331:6;4287:71;:::i;:::-;4143:222;;;;:::o;4371:329::-;4430:6;4479:2;4467:9;4458:7;4454:23;4450:32;4447:119;;;4485:79;;:::i;:::-;4447:119;4605:1;4630:53;4675:7;4666:6;4655:9;4651:22;4630:53;:::i;:::-;4620:63;;4576:117;4371:329;;;;:::o;4706:332::-;4827:4;4865:2;4854:9;4850:18;4842:26;;4878:71;4946:1;4935:9;4931:17;4922:6;4878:71;:::i;:::-;4959:72;5027:2;5016:9;5012:18;5003:6;4959:72;:::i;:::-;4706:332;;;;;:::o;5044:77::-;5081:7;5110:5;5099:16;;5044:77;;;:::o;5127:118::-;5214:24;5232:5;5214:24;:::i;:::-;5209:3;5202:37;5127:118;;:::o;5251:101::-;5287:7;5327:18;5320:5;5316:30;5305:41;;5251:101;;;:::o;5358:115::-;5443:23;5460:5;5443:23;:::i;:::-;5438:3;5431:36;5358:115;;:::o;5479:89::-;5515:7;5555:6;5548:5;5544:18;5533:29;;5479:89;;;:::o;5574:115::-;5659:23;5676:5;5659:23;:::i;:::-;5654:3;5647:36;5574:115;;:::o;5695:93::-;5731:7;5771:10;5764:5;5760:22;5749:33;;5695:93;;;:::o;5794:115::-;5879:23;5896:5;5879:23;:::i;:::-;5874:3;5867:36;5794:115;;:::o;5915:648::-;6112:4;6150:3;6139:9;6135:19;6127:27;;6164:71;6232:1;6221:9;6217:17;6208:6;6164:71;:::i;:::-;6245:70;6311:2;6300:9;6296:18;6287:6;6245:70;:::i;:::-;6325;6391:2;6380:9;6376:18;6367:6;6325:70;:::i;:::-;6405;6471:2;6460:9;6456:18;6447:6;6405:70;:::i;:::-;6485:71;6551:3;6540:9;6536:19;6527:6;6485:71;:::i;:::-;5915:648;;;;;;;;:::o;6569:143::-;6626:5;6657:6;6651:13;6642:22;;6673:33;6700:5;6673:33;:::i;:::-;6569:143;;;;:::o;6718:351::-;6788:6;6837:2;6825:9;6816:7;6812:23;6808:32;6805:119;;;6843:79;;:::i;:::-;6805:119;6963:1;6988:64;7044:7;7035:6;7024:9;7020:22;6988:64;:::i;:::-;6978:74;;6934:128;6718:351;;;;:::o;7075:180::-;7123:77;7120:1;7113:88;7220:4;7217:1;7210:15;7244:4;7241:1;7234:15;7261:180;7309:77;7306:1;7299:88;7406:4;7403:1;7396:15;7430:4;7427:1;7420:15;7447:176;7479:1;7496:20;7514:1;7496:20;:::i;:::-;7491:25;;7530:20;7548:1;7530:20;:::i;:::-;7525:25;;7569:1;7559:35;;7574:18;;:::i;:::-;7559:35;7615:1;7612;7608:9;7603:14;;7447:176;;;;:::o;7629:180::-;7677:77;7674:1;7667:88;7774:4;7771:1;7764:15;7798:4;7795:1;7788:15;7815:147;7916:11;7953:3;7938:18;;7815:147;;;;:::o;7968:114::-;;:::o;8088:398::-;8247:3;8268:83;8349:1;8344:3;8268:83;:::i;:::-;8261:90;;8360:93;8449:3;8360:93;:::i;:::-;8478:1;8473:3;8469:11;8462:18;;8088:398;;;:::o;8492:379::-;8676:3;8698:147;8841:3;8698:147;:::i;:::-;8691:154;;8862:3;8855:10;;8492:379;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"627400","executionCost":"infinite","totalCost":"infinite"},"external":{"enterRaffle()":"infinite","getPlayer(uint256)":"5033","getRecentWinner()":"2544","rawFulfillRandomWords(uint256,uint256[])":"infinite","requestRandomWords()":"infinite"},"internal":{"fulfillRandomWords(uint256,uint256[] memory)":"infinite"}},"methodIdentifiers":{"enterRaffle()":"2cfcc539","getPlayer(uint256)":"e55ae4e8","getRecentWinner()":"473f1ddc","rawFulfillRandomWords(uint256,uint256[])":"1fe543e3","requestRandomWords()":"e0c86289"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"vrfCoordinatorV2\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"subscriptionId\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"gasLane\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"interval\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"entranceFee\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"callbackGasLimit\",\"type\":\"uint32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"have\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"want\",\"type\":\"address\"}],\"name\":\"OnlyCoordinatorCanFulfill\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Raffle__SendMoreToEnterRaffle\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Raffle__TransferFailed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"}],\"name\":\"RaffleEnter\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"randomWords\",\"type\":\"uint256[]\"}],\"name\":\"RequestFulfilled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"numWords\",\"type\":\"uint32\"}],\"name\":\"RequestSent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"}],\"name\":\"RequestedRaffleWinner\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"requestId\",\"type\":\"address\"}],\"name\":\"WinnerPicked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"enterRaffle\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getPlayer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRecentWinner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"randomWords\",\"type\":\"uint256[]\"}],\"name\":\"rawFulfillRandomWords\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"requestRandomWords\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Raffle.sol\":\"Raffle\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\n/** ****************************************************************************\\n * @notice Interface for contracts using VRF randomness\\n * *****************************************************************************\\n * @dev PURPOSE\\n *\\n * @dev Reggie the Random Oracle (not his real job) wants to provide randomness\\n * @dev to Vera the verifier in such a way that Vera can be sure he's not\\n * @dev making his output up to suit himself. Reggie provides Vera a public key\\n * @dev to which he knows the secret key. Each time Vera provides a seed to\\n * @dev Reggie, he gives back a value which is computed completely\\n * @dev deterministically from the seed and the secret key.\\n *\\n * @dev Reggie provides a proof by which Vera can verify that the output was\\n * @dev correctly computed once Reggie tells it to her, but without that proof,\\n * @dev the output is indistinguishable to her from a uniform random sample\\n * @dev from the output space.\\n *\\n * @dev The purpose of this contract is to make it easy for unrelated contracts\\n * @dev to talk to Vera the verifier about the work Reggie is doing, to provide\\n * @dev simple access to a verifiable source of randomness. It ensures 2 things:\\n * @dev 1. The fulfillment came from the VRFCoordinator\\n * @dev 2. The consumer contract implements fulfillRandomWords.\\n * *****************************************************************************\\n * @dev USAGE\\n *\\n * @dev Calling contracts must inherit from VRFConsumerBase, and can\\n * @dev initialize VRFConsumerBase's attributes in their constructor as\\n * @dev shown:\\n *\\n * @dev   contract VRFConsumer {\\n * @dev     constructor(<other arguments>, address _vrfCoordinator, address _link)\\n * @dev       VRFConsumerBase(_vrfCoordinator) public {\\n * @dev         <initialization with other arguments goes here>\\n * @dev       }\\n * @dev   }\\n *\\n * @dev The oracle will have given you an ID for the VRF keypair they have\\n * @dev committed to (let's call it keyHash). Create subscription, fund it\\n * @dev and your consumer contract as a consumer of it (see VRFCoordinatorInterface\\n * @dev subscription management functions).\\n * @dev Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,\\n * @dev callbackGasLimit, numWords),\\n * @dev see (VRFCoordinatorInterface for a description of the arguments).\\n *\\n * @dev Once the VRFCoordinator has received and validated the oracle's response\\n * @dev to your request, it will call your contract's fulfillRandomWords method.\\n *\\n * @dev The randomness argument to fulfillRandomWords is a set of random words\\n * @dev generated from your requestId and the blockHash of the request.\\n *\\n * @dev If your contract could have concurrent requests open, you can use the\\n * @dev requestId returned from requestRandomWords to track which response is associated\\n * @dev with which randomness request.\\n * @dev See \\\"SECURITY CONSIDERATIONS\\\" for principles to keep in mind,\\n * @dev if your contract could have multiple requests in flight simultaneously.\\n *\\n * @dev Colliding `requestId`s are cryptographically impossible as long as seeds\\n * @dev differ.\\n *\\n * *****************************************************************************\\n * @dev SECURITY CONSIDERATIONS\\n *\\n * @dev A method with the ability to call your fulfillRandomness method directly\\n * @dev could spoof a VRF response with any random value, so it's critical that\\n * @dev it cannot be directly called by anything other than this base contract\\n * @dev (specifically, by the VRFConsumerBase.rawFulfillRandomness method).\\n *\\n * @dev For your users to trust that your contract's random behavior is free\\n * @dev from malicious interference, it's best if you can write it so that all\\n * @dev behaviors implied by a VRF response are executed *during* your\\n * @dev fulfillRandomness method. If your contract must store the response (or\\n * @dev anything derived from it) and use it later, you must ensure that any\\n * @dev user-significant behavior which depends on that stored value cannot be\\n * @dev manipulated by a subsequent VRF request.\\n *\\n * @dev Similarly, both miners and the VRF oracle itself have some influence\\n * @dev over the order in which VRF responses appear on the blockchain, so if\\n * @dev your contract could have multiple VRF requests in flight simultaneously,\\n * @dev you must ensure that the order in which the VRF responses arrive cannot\\n * @dev be used to manipulate your contract's user-significant behavior.\\n *\\n * @dev Since the block hash of the block which contains the requestRandomness\\n * @dev call is mixed into the input to the VRF *last*, a sufficiently powerful\\n * @dev miner could, in principle, fork the blockchain to evict the block\\n * @dev containing the request, forcing the request to be included in a\\n * @dev different block with a different hash, and therefore a different input\\n * @dev to the VRF. However, such an attack would incur a substantial economic\\n * @dev cost. This cost scales with the number of blocks the VRF oracle waits\\n * @dev until it calls responds to a request. It is for this reason that\\n * @dev that you can signal to an oracle you'd like them to wait longer before\\n * @dev responding to the request (however this is not enforced in the contract\\n * @dev and so remains effective only in the case of unmodified oracle software).\\n */\\nabstract contract VRFConsumerBaseV2 {\\n  error OnlyCoordinatorCanFulfill(address have, address want);\\n  address private immutable vrfCoordinator;\\n\\n  /**\\n   * @param _vrfCoordinator address of VRFCoordinator contract\\n   */\\n  constructor(address _vrfCoordinator) {\\n    vrfCoordinator = _vrfCoordinator;\\n  }\\n\\n  /**\\n   * @notice fulfillRandomness handles the VRF response. Your contract must\\n   * @notice implement it. See \\\"SECURITY CONSIDERATIONS\\\" above for important\\n   * @notice principles to keep in mind when implementing your fulfillRandomness\\n   * @notice method.\\n   *\\n   * @dev VRFConsumerBaseV2 expects its subcontracts to have a method with this\\n   * @dev signature, and will call it once it has verified the proof\\n   * @dev associated with the randomness. (It is triggered via a call to\\n   * @dev rawFulfillRandomness, below.)\\n   *\\n   * @param requestId The Id initially returned by requestRandomness\\n   * @param randomWords the VRF output expanded to the requested number of words\\n   */\\n  function fulfillRandomWords(uint256 requestId, uint256[] memory randomWords) internal virtual;\\n\\n  // rawFulfillRandomness is called by VRFCoordinator when it receives a valid VRF\\n  // proof. rawFulfillRandomness then calls fulfillRandomness, after validating\\n  // the origin of the call\\n  function rawFulfillRandomWords(uint256 requestId, uint256[] memory randomWords) external {\\n    if (msg.sender != vrfCoordinator) {\\n      revert OnlyCoordinatorCanFulfill(msg.sender, vrfCoordinator);\\n    }\\n    fulfillRandomWords(requestId, randomWords);\\n  }\\n}\\n\",\"keccak256\":\"0x3d709a5e0f1f9b8841172b10ba8af785dd51a13eda9fc395723a706e51329904\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface VRFCoordinatorV2Interface {\\n  /**\\n   * @notice Get configuration relevant for making requests\\n   * @return minimumRequestConfirmations global min for request confirmations\\n   * @return maxGasLimit global max for request gas limit\\n   * @return s_provingKeyHashes list of registered key hashes\\n   */\\n  function getRequestConfig()\\n    external\\n    view\\n    returns (\\n      uint16,\\n      uint32,\\n      bytes32[] memory\\n    );\\n\\n  /**\\n   * @notice Request a set of random words.\\n   * @param keyHash - Corresponds to a particular oracle job which uses\\n   * that key for generating the VRF proof. Different keyHash's have different gas price\\n   * ceilings, so you can select a specific one to bound your maximum per request cost.\\n   * @param subId  - The ID of the VRF subscription. Must be funded\\n   * with the minimum subscription balance required for the selected keyHash.\\n   * @param minimumRequestConfirmations - How many blocks you'd like the\\n   * oracle to wait before responding to the request. See SECURITY CONSIDERATIONS\\n   * for why you may want to request more. The acceptable range is\\n   * [minimumRequestBlockConfirmations, 200].\\n   * @param callbackGasLimit - How much gas you'd like to receive in your\\n   * fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords\\n   * may be slightly less than this amount because of gas used calling the function\\n   * (argument decoding etc.), so you may need to request slightly more than you expect\\n   * to have inside fulfillRandomWords. The acceptable range is\\n   * [0, maxGasLimit]\\n   * @param numWords - The number of uint256 random values you'd like to receive\\n   * in your fulfillRandomWords callback. Note these numbers are expanded in a\\n   * secure way by the VRFCoordinator from a single random value supplied by the oracle.\\n   * @return requestId - A unique identifier of the request. Can be used to match\\n   * a request to a response in fulfillRandomWords.\\n   */\\n  function requestRandomWords(\\n    bytes32 keyHash,\\n    uint64 subId,\\n    uint16 minimumRequestConfirmations,\\n    uint32 callbackGasLimit,\\n    uint32 numWords\\n  ) external returns (uint256 requestId);\\n\\n  /**\\n   * @notice Create a VRF subscription.\\n   * @return subId - A unique subscription id.\\n   * @dev You can manage the consumer set dynamically with addConsumer/removeConsumer.\\n   * @dev Note to fund the subscription, use transferAndCall. For example\\n   * @dev  LINKTOKEN.transferAndCall(\\n   * @dev    address(COORDINATOR),\\n   * @dev    amount,\\n   * @dev    abi.encode(subId));\\n   */\\n  function createSubscription() external returns (uint64 subId);\\n\\n  /**\\n   * @notice Get a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @return balance - LINK balance of the subscription in juels.\\n   * @return reqCount - number of requests for this subscription, determines fee tier.\\n   * @return owner - owner of the subscription.\\n   * @return consumers - list of consumer address which are able to use this subscription.\\n   */\\n  function getSubscription(uint64 subId)\\n    external\\n    view\\n    returns (\\n      uint96 balance,\\n      uint64 reqCount,\\n      address owner,\\n      address[] memory consumers\\n    );\\n\\n  /**\\n   * @notice Request subscription owner transfer.\\n   * @param subId - ID of the subscription\\n   * @param newOwner - proposed new owner of the subscription\\n   */\\n  function requestSubscriptionOwnerTransfer(uint64 subId, address newOwner) external;\\n\\n  /**\\n   * @notice Request subscription owner transfer.\\n   * @param subId - ID of the subscription\\n   * @dev will revert if original owner of subId has\\n   * not requested that msg.sender become the new owner.\\n   */\\n  function acceptSubscriptionOwnerTransfer(uint64 subId) external;\\n\\n  /**\\n   * @notice Add a consumer to a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @param consumer - New consumer which can use the subscription\\n   */\\n  function addConsumer(uint64 subId, address consumer) external;\\n\\n  /**\\n   * @notice Remove a consumer from a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @param consumer - Consumer to remove from the subscription\\n   */\\n  function removeConsumer(uint64 subId, address consumer) external;\\n\\n  /**\\n   * @notice Cancel a subscription\\n   * @param subId - ID of the subscription\\n   * @param to - Where to send the remaining LINK to\\n   */\\n  function cancelSubscription(uint64 subId, address to) external;\\n\\n  /*\\n   * @notice Check to see if there exists a request commitment consumers\\n   * for all consumers and keyhashes for a given sub.\\n   * @param subId - ID of the subscription\\n   * @return true if there exists at least one unfulfilled request for the subscription, false\\n   * otherwise.\\n   */\\n  function pendingRequestExists(uint64 subId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x54cdc97717cbae1a51a5500c8ee4875ebf056c95b54d2155a9544a79cb4f4494\",\"license\":\"MIT\"},\"contracts/Raffle.sol\":{\"content\":\"// SPDX-License-Identifier: SEE LICENSE IN LICENSE\\npragma solidity ^0.8.7;\\nimport \\\"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol\\\";\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol\\\";\\n\\nerror Raffle__SendMoreToEnterRaffle();\\nerror Raffle__TransferFailed();\\n\\ncontract Raffle is VRFConsumerBaseV2 {\\n  /* Type declarations */\\n  enum RaffleState {\\n    OPEN,\\n    CALCULATING\\n  }\\n\\n  // Lottery Variables\\n  uint64 private immutable i_subscriptionId;\\n  bytes32 private immutable i_gasLane;\\n  uint32 private immutable i_callbackGasLimit;\\n  uint16 private constant REQUEST_CONFIRMATIONS = 3;\\n  uint32 private constant NUM_WORDS = 1;\\n\\n  // Lottery Variables\\n  uint256 private immutable i_interval;\\n  uint256 private immutable i_entranceFee;\\n  uint256 private s_lastTimeStamp;\\n  address private s_recentWinner;\\n  address payable[] private s_players;\\n  RaffleState private s_raffleState;\\n  VRFCoordinatorV2Interface private immutable i_vrfCoordinator;\\n\\n  event RequestedRaffleWinner(uint256 indexed requestId);\\n  event RaffleEnter(address indexed player);\\n  event RequestSent(uint256 requestId, uint32 numWords);\\n  event WinnerPicked(address indexed requestId);\\n  event RequestFulfilled(uint256 requestId, uint256[] randomWords);\\n\\n  constructor(\\n    address vrfCoordinatorV2,\\n    uint64 subscriptionId,\\n    bytes32 gasLane, // keyHash\\n    uint256 interval,\\n    uint256 entranceFee,\\n    uint32 callbackGasLimit\\n  ) VRFConsumerBaseV2(vrfCoordinatorV2) {\\n    i_vrfCoordinator = VRFCoordinatorV2Interface(vrfCoordinatorV2);\\n    i_gasLane = gasLane;\\n    i_interval = interval;\\n    i_subscriptionId = subscriptionId;\\n    i_entranceFee = entranceFee;\\n    s_raffleState = RaffleState.OPEN;\\n    s_lastTimeStamp = block.timestamp;\\n    i_callbackGasLimit = callbackGasLimit;\\n  }\\n\\n  function enterRaffle() public payable {\\n    if (msg.value < i_entranceFee) {\\n      revert Raffle__SendMoreToEnterRaffle();\\n    } else {\\n      s_players.push(payable(msg.sender));\\n      emit RaffleEnter(msg.sender);\\n    }\\n  }\\n\\n  function requestRandomWords() external {\\n    // Will revert if subscription is not set and funded.\\n    uint256 requestId = i_vrfCoordinator.requestRandomWords(\\n      i_gasLane,\\n      i_subscriptionId,\\n      REQUEST_CONFIRMATIONS,\\n      i_callbackGasLimit,\\n      NUM_WORDS\\n    );\\n    emit RequestedRaffleWinner(requestId);\\n  }\\n\\n  function fulfillRandomWords(\\n    uint256, /* requestId */\\n    uint256[] memory randomWords\\n  ) internal override {\\n    uint256 indexOfWinner = randomWords[0] % s_players.length;\\n    address payable recentWinner = s_players[indexOfWinner];\\n    s_recentWinner = recentWinner;\\n    s_players = new address payable[](0);\\n    s_raffleState = RaffleState.OPEN;\\n    s_lastTimeStamp = block.timestamp;\\n    (bool success, ) = recentWinner.call{value: address(this).balance}(\\\"\\\");\\n    // require(success, \\\"Transfer failed\\\");\\n    if (!success) {\\n      revert Raffle__TransferFailed();\\n    }\\n    emit WinnerPicked(recentWinner);\\n  }\\n\\n  function getPlayer(uint256 index) public view returns (address) {\\n    return s_players[index];\\n  }\\n\\n  function getRecentWinner() public view returns (address) {\\n    return s_recentWinner;\\n  }\\n}\\n\",\"keccak256\":\"0x17abd67fd1b1db38d0da7f23ec3b561a0e99a479b00715675bb4c15220fbe087\",\"license\":\"SEE LICENSE IN LICENSE\"}},\"version\":1}","storageLayout":{"storage":[{"astId":184,"contract":"contracts/Raffle.sol:Raffle","label":"s_lastTimeStamp","offset":0,"slot":"0","type":"t_uint256"},{"astId":186,"contract":"contracts/Raffle.sol:Raffle","label":"s_recentWinner","offset":0,"slot":"1","type":"t_address"},{"astId":189,"contract":"contracts/Raffle.sol:Raffle","label":"s_players","offset":0,"slot":"2","type":"t_array(t_address_payable)dyn_storage"},{"astId":192,"contract":"contracts/Raffle.sol:Raffle","label":"s_raffleState","offset":0,"slot":"3","type":"t_enum(RaffleState)166"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_address_payable":{"encoding":"inplace","label":"address payable","numberOfBytes":"20"},"t_array(t_address_payable)dyn_storage":{"base":"t_address_payable","encoding":"dynamic_array","label":"address payable[]","numberOfBytes":"32"},"t_enum(RaffleState)166":{"encoding":"inplace","label":"enum Raffle.RaffleState","numberOfBytes":"1"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}